<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='Covid_Forecast_17205316953900' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau table 3)' inline='true' name='federated.0fhw98p1o0i07e19zoxi71v25fvs' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau table 3' name='excel-direct.1mcmwli1q097xo10wcup119732r0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/gurua/Desktop/Tableau project/Tableau table 3.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1mcmwli1q097xo10wcup119732r0' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1mcmwli1q097xo10wcup119732r0' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-refresh-mode='' incremental-updates='' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D256:no:A1:D256:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A6EC8B04637B49CEA0F41040BD5C8E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A6EC8B04637B49CEA0F41040BD5C8E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A6EC8B04637B49CEA0F41040BD5C8E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A6EC8B04637B49CEA0F41040BD5C8E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_A6EC8B04637B49CEA0F41040BD5C8E0F]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/gurua/Desktop/Tableau project/Sheet1 (Tableau table 3).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/09/2024 01:27:34 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-refresh-mode='' incremental-updates=''>
            <refresh-event add-from-file-path='Sheet1 (Tableau table 3)' increment-value='%null%' refresh-type='create' rows-inserted='255' timestamp-start='2024-07-09 13:27:34.129' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>255</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>255</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>225</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>245</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_A6EC8B04637B49CEA0F41040BD5C8E0F'>
            <properties context=''>
              <relation connection='excel-direct.1mcmwli1q097xo10wcup119732r0' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau table 2)' inline='true' name='federated.1379vvi0pxj06316sf8tf1sfcjdr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau table 2' name='excel-direct.0yqmea71wvpmyd1eqcdwl0abmbsi'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/gurua/Desktop/Tableau project/Tableau table 2.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0yqmea71wvpmyd1eqcdwl0abmbsi' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0yqmea71wvpmyd1eqcdwl0abmbsi' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-refresh-mode='' incremental-updates='' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9BAA0A73705F4AE99F4896972AE5604F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9BAA0A73705F4AE99F4896972AE5604F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_9BAA0A73705F4AE99F4896972AE5604F]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/gurua/Desktop/Tableau project/Sheet1 (Tableau table 2).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/09/2024 01:27:24 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-refresh-mode='' incremental-updates=''>
            <refresh-event add-from-file-path='Sheet1 (Tableau table 2)' increment-value='%null%' refresh-type='create' rows-inserted='6' timestamp-start='2024-07-09 13:27:24.088' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='orange_10_0' type='palette'>
            <map to='#9e3d22'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#af4623'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#ca5422'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#e36420'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f5a645'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#fcbe75'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_9BAA0A73705F4AE99F4896972AE5604F'>
            <properties context=''>
              <relation connection='excel-direct.0yqmea71wvpmyd1eqcdwl0abmbsi' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau table 4)' inline='true' name='federated.17sm8f8134kqkt19k051n0fla6rb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau table 4' name='excel-direct.0jp6er913zhar51gf3wjx1w3v88z'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/gurua/Desktop/Tableau project/Tableau table 4.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0jp6er913zhar51gf3wjx1w3v88z' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0jp6er913zhar51gf3wjx1w3v88z' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-refresh-mode='' incremental-updates='' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_20F6F2D5825B47028411B08DFA9BD5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_20F6F2D5825B47028411B08DFA9BD5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_20F6F2D5825B47028411B08DFA9BD5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_20F6F2D5825B47028411B08DFA9BD5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_20F6F2D5825B47028411B08DFA9BD5ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_20F6F2D5825B47028411B08DFA9BD5ED]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/gurua/Desktop/Tableau project/Sheet1 (Tableau table 4).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/09/2024 01:27:42 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-refresh-mode='' incremental-updates=''>
            <refresh-event add-from-file-path='Sheet1 (Tableau table 4)' increment-value='%null%' refresh-type='create' rows-inserted='404469' timestamp-start='2024-07-09 13:27:41.231' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>254</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>254</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>8583</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>56238</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>64122</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_20F6F2D5825B47028411B08DFA9BD5ED'>
            <properties context=''>
              <relation connection='excel-direct.0jp6er913zhar51gf3wjx1w3v88z' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau table 1)' inline='true' name='federated.1yn08a41145qrx13kbpka15a6sqo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau table 1' name='excel-direct.139g9p217z6l9x15kcnsv1yg5wzc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/gurua/Desktop/Tableau project/Tableau table 1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.139g9p217z6l9x15kcnsv1yg5wzc' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.139g9p217z6l9x15kcnsv1yg5wzc' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-refresh-mode='' incremental-updates='' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6D5A75569F8430EA0D780B75898B18F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6D5A75569F8430EA0D780B75898B18F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6D5A75569F8430EA0D780B75898B18F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_C6D5A75569F8430EA0D780B75898B18F]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/gurua/Desktop/Tableau project/Sheet1 (Tableau table 1).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/09/2024 01:27:07 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-refresh-mode='' incremental-updates=''>
            <refresh-event add-from-file-path='Sheet1 (Tableau table 1)' increment-value='%null%' refresh-type='create' rows-inserted='1' timestamp-start='2024-07-09 13:27:07.074' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6D5A75569F8430EA0D780B75898B18F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6D5A75569F8430EA0D780B75898B18F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6D5A75569F8430EA0D780B75898B18F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_C6D5A75569F8430EA0D780B75898B18F'>
            <properties context=''>
              <relation connection='excel-direct.139g9p217z6l9x15kcnsv1yg5wzc' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau table 1)' name='federated.1yn08a41145qrx13kbpka15a6sqo' />
          </datasources>
          <datasource-dependencies datasource='federated.1yn08a41145qrx13kbpka15a6sqo'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yn08a41145qrx13kbpka15a6sqo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1yn08a41145qrx13kbpka15a6sqo].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1yn08a41145qrx13kbpka15a6sqo].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1yn08a41145qrx13kbpka15a6sqo].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1yn08a41145qrx13kbpka15a6sqo].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1yn08a41145qrx13kbpka15a6sqo].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1yn08a41145qrx13kbpka15a6sqo].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1yn08a41145qrx13kbpka15a6sqo].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1yn08a41145qrx13kbpka15a6sqo].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1yn08a41145qrx13kbpka15a6sqo].[:Measure Names]' value='183' />
            <format attr='height' value='36' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.1yn08a41145qrx13kbpka15a6sqo].[sum:DeathPercentage:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.1yn08a41145qrx13kbpka15a6sqo].[Multiple Values]' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#ff862f' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1yn08a41145qrx13kbpka15a6sqo].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1yn08a41145qrx13kbpka15a6sqo].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{6801FD9D-8AF3-44FD-B287-DE9C3D6CF9A4}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Death per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau table 2)' name='federated.1379vvi0pxj06316sf8tf1sfcjdr' />
          </datasources>
          <datasource-dependencies datasource='federated.1379vvi0pxj06316sf8tf1sfcjdr'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1379vvi0pxj06316sf8tf1sfcjdr].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1379vvi0pxj06316sf8tf1sfcjdr].[none:location:nk]' value='127' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1379vvi0pxj06316sf8tf1sfcjdr].[sum:TotalDeathCount:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1379vvi0pxj06316sf8tf1sfcjdr].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2853591442108154' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1379vvi0pxj06316sf8tf1sfcjdr].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1379vvi0pxj06316sf8tf1sfcjdr].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{717726A3-5969-4413-B26A-1D1C88DB7865}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau table 3)' name='federated.0fhw98p1o0i07e19zoxi71v25fvs' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0fhw98p1o0i07e19zoxi71v25fvs'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0fhw98p1o0i07e19zoxi71v25fvs].[Longitude (generated)]' field-type='quantitative' max='13833228.551744966' min='4991904.7865535961' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0fhw98p1o0i07e19zoxi71v25fvs].[Latitude (generated)]' field-type='quantitative' max='4547599.6454157' min='601037.83059686725' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0fhw98p1o0i07e19zoxi71v25fvs].[sum:PercentPopulationInfected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0fhw98p1o0i07e19zoxi71v25fvs].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='country-label-sm' value='false' />
            <format attr='enabled' id='country-label-md' value='false' />
            <format attr='enabled' id='country-label-lg' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0fhw98p1o0i07e19zoxi71v25fvs].[none:Location:nk]' />
              <color column='[federated.0fhw98p1o0i07e19zoxi71v25fvs].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.0fhw98p1o0i07e19zoxi71v25fvs].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fhw98p1o0i07e19zoxi71v25fvs].[Latitude (generated)]</rows>
        <cols>[federated.0fhw98p1o0i07e19zoxi71v25fvs].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{55BDA508-8422-47B1-BA16-905651E4DDEE}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau table 4)' name='federated.17sm8f8134kqkt19k051n0fla6rb' />
          </datasources>
          <datasource-dependencies datasource='federated.17sm8f8134kqkt19k051n0fla6rb'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17sm8f8134kqkt19k051n0fla6rb].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17sm8f8134kqkt19k051n0fla6rb].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.17sm8f8134kqkt19k051n0fla6rb].[tmn:date:qk]' scope='cols' value='Year' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.17sm8f8134kqkt19k051n0fla6rb].[tmn:date:qk]' value='101' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17sm8f8134kqkt19k051n0fla6rb].[none:Location:nk]' />
              <text column='[federated.17sm8f8134kqkt19k051n0fla6rb].[none:Location:nk]' />
              <color column='[federated.17sm8f8134kqkt19k051n0fla6rb].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17sm8f8134kqkt19k051n0fla6rb].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.17sm8f8134kqkt19k051n0fla6rb].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{1A140B4A-3278-4CE3-BF33-9005382AE830}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98014' id='9' param='horz' type-v2='layout-flow' w='99002' x='499' y='993'>
            <zone h='98014' id='7' type-v2='layout-basic' w='87157' x='499' y='993'>
              <zone h='28661' id='5' name='Sheet 2' w='43578' x='499' y='18734'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='17741' id='3' name='Sheet 1' w='43578' x='499' y='993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='46402' id='6' name='Sheet 3' w='43579' x='44077' y='993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='51612' id='11' name='Sheet 4' w='70885' x='499' y='47395'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='51612' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.17sm8f8134kqkt19k051n0fla6rb].[none:Location:nk]&#10;[federated.17sm8f8134kqkt19k051n0fla6rb].[none:Forecast Indicator:nk]' type-v2='color' w='16272' x='71384' y='47395'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='190' h='98014' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='11845' x='87656' y='993'>
              <zone h='10050' id='10' name='Sheet 3' pane-specification-id='1' param='[federated.0fhw98p1o0i07e19zoxi71v25fvs].[sum:PercentPopulationInfected:qk]' type-v2='color' w='11845' x='87656' y='993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='26' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98014' id='25' param='vert' type-v2='layout-flow' w='99002' x='499' y='993'>
                <zone fixed-size='134' h='17741' id='3' is-fixed='true' name='Sheet 1' w='43578' x='499' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46402' id='6' is-fixed='true' name='Sheet 3' w='43579' x='44077' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10050' id='10' name='Sheet 3' pane-specification-id='1' param='[federated.0fhw98p1o0i07e19zoxi71v25fvs].[sum:PercentPopulationInfected:qk]' type-v2='color' w='11845' x='87656' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='221' h='28661' id='5' is-fixed='true' name='Sheet 2' w='43578' x='499' y='18734'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51612' id='11' is-fixed='true' name='Sheet 4' w='70885' x='499' y='47395'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='51612' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.17sm8f8134kqkt19k051n0fla6rb].[none:Location:nk]&#10;[federated.17sm8f8134kqkt19k051n0fla6rb].[none:Forecast Indicator:nk]' type-v2='color' w='16272' x='71384' y='47395'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5AEE9168-F56A-4621-8A35-AA5D4D556EC8}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='137'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yn08a41145qrx13kbpka15a6sqo].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{069A300C-2D42-47F1-A0B2-3638890362A9}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1379vvi0pxj06316sf8tf1sfcjdr].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{388CD087-966A-4BE4-977A-DB078F3FE858}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0fhw98p1o0i07e19zoxi71v25fvs].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fhw98p1o0i07e19zoxi71v25fvs].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{FF5493AC-D8B5-457E-BD78-B7EF15C77A77}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17sm8f8134kqkt19k051n0fla6rb].[none:Location:nk]&#10;[federated.17sm8f8134kqkt19k051n0fla6rb].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17sm8f8134kqkt19k051n0fla6rb].[none:Forecast Indicator:nk]</field>
            <field>[federated.17sm8f8134kqkt19k051n0fla6rb].[none:Location:nk]</field>
            <field>[federated.17sm8f8134kqkt19k051n0fla6rb].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2FFB7AEA-1F65-464C-A600-4E06F7021EF5}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.17sm8f8134kqkt19k051n0fla6rb].[none:Forecast Indicator:nk]</field>
              <field>[federated.17sm8f8134kqkt19k051n0fla6rb].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{0B7B7A82-F7C8-4E9C-9377-DC40948D5C7A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      OCqQzAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='60' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      3wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nNS92Y8lV37n9zlLRNwl9z0rK2tnLWSRxa03dqulbqlHGksYwTC8PPjZfvBf
      4Ld5NjzGDDQGbMCAMbCBgS3ZwlhW29DMtNQa9comWWSRte9LVu573ntjOef44ZyIuDcri2S3
      bKt1iCxm3ogbEeec3/77/n4hrv6P/9ylW7s8Xn5GF8n06AjDsxOcvqzQCp4sW04NO5RwWCc4
      2O8wNNRm9yBjxTW5vjvF4ru/STe3ZLubFAd7TM3OkQnNph5i1wheNuTeKt+Jf4xuqheONaUh
      FhYAgeDewx7nZgQCCcDNZcOFM63q/HtLOdOzCSb83ZaOWDgAHBaHe+Ee1+5mjA0pRsUeS2nM
      xRMtfnz1Gd+8ssDPrj7jrTcWuHV9jddfn+Hn15YwnYyz56a5+WCTWOQsbTv+8LunefLpKqOX
      JvjFjx5y7sIxFicirt7d4J1X51h6ss4nt9dZM6NcmTZcuTDFtVvrvHFhGnj52oBgecuyvAcX
      ziQ8XMo5MStIYoEUEoTAmA5//L/eYuHVY3zz8hS/+HiJs8fbrJk260+X+Oa7p/j4s2UuXpjj
      xt1lXj89ziePDhB5xpuX53h4Z5nGzCTbT5bZEw2unJ/i42tPefet4+S9jJ9fXeLxdsHvXJkk
      b49iHm8yfnmGESSPn2eYNOPktKYoDOAwxmKtJYoi8jwnTmIirRAChBBhvgKBYGV1jXa7Rbvd
      7FsHF36AsM/1sNW6ZFYSyxf381cZejLt0Xl2j4lAMGL3gKc7yzwfbnJuQTAdOz64XvDecX9D
      mVtWtiRrheTi6YSO2eH7m9+FZAgaI4gGUIRp5J9/cycnObWyytn5DCcGiaEQhpauL9DSBZvL
      GbOjGuEEe2s5+vhotXadzS7JRJMCQVNaYldfz1VsIcLfFnDoPOX4SIN0Z4sn93q8MjrG2vIS
      z+JH6KhFkmdsPHuIPXWMtedPybe2gFliqdk+6PLamOCzW7vo5xsMvXKCr72a8dd/9QPGfucs
      q0vPkGf3+PDje/z2OzP8N3/+jIVeij6xyM7SU/SJky9fFyf59IlhYrbB22cUH91KGRsSqEwQ
      S41zFmMLdnc7TI4dkKx/xINnxzjd2OJ//7f7/Kd/eIHV2/eIcuis3GZ/bo/H9+7y1snzbN65
      jhseobeyxI2H2/z+4gmGZlP2N5/ww5/dwe5s4S7mXP2bu5x/+zRrP75DtrNKz01jni9RzO1x
      /3HK8ZGcqRGJ7EoiBNZZBAIpFcIIhJIII3CmJlSBqNZ+uuFQbCG7JWNAP5GLQwxQfk+giADn
      gnBzDiEk4vNkyecM9Z/9wT/4x0tje/TmNas7jknrGAG2VwwrTnJiXqEjeL5mmWo7djLBmtBc
      PKFRCuabKdtru2yMXzpCxn7+EEqzlI5y0t2lEQ8eKxA4JFo4hBCMtBV3nhnGEsdu13LruSVK
      FAddi7EgJWSpYWoYlPBLWN0HGX7EwOc7+wZjBJNTLVxnj6t3d/nWV09x7+46G1v75FLTlgWf
      Pdzla++c4MKpUR482WZ2foxjk03OnZ1le2OPmZlh2sMJt288J5ka4fzxUbLdfbZSxVTT8WTL
      0Gy0uTQXMzmWEGnFyFCDozTA9r7gwwcHjE40OXmsgRCC8RHJxo7j0XODVtBqOArjuPHAkVvF
      N782xdZWysnTU9y+s8aV8xPEkWK4nTA9mXD12hIruxlvnJ9mZ3Wb2XPHcHsHPF3vsrFrGY4s
      Nx53+Mob85yabvDTT9e5cnmKq9dWOb4wzvGZYbb3FasbhrFYcmkOmrFFa41SGik1UiqU1Agh
      KmkvhKD/Pz88lSglQJQS3x1aiaOo2bG/32N9fYuR4SH/ibMDx8WvwAXir/7lP3ETySNOzkpW
      Ng33rmaY1LKYWp4kim/9bhOE4emaZWPLkhrBW69olLRIIcgyeP/WDnff+6946pq/9AM45/jK
      0/+Bt092jjyucUzoHCHAWrj5IKPdlEyPK7o9x0HPkmaw1zG8eb6JDNZULW2OUq/gcDjnWFor
      eL5mcDh6KSSRJIr83rz+SoIsBZQDhDtC0oi+674oAoKg4sFSwc5aj6HE0YwFW7s5vcxyZr7J
      5IhECigMfPgw59yZBlrB0HATay0CP/f9ruH6vR6tpmRjx3D+ZJPVzYKpUZifUnz80T3GTx/j
      1ESCEALnYO35Jh/e2aI9NspXz7b56882+d7XF5FC4JzDOYuUh6Stc4DAWYEDHi3lbG3mvH1K
      Yq2pvqOUHjBt7t59wMmTi0SRhCBwXliPIMndof2od+3lRGwM5HlBoxEhkOH56+v0M96XHeLD
      P/2v3c07t5mbhNdORlhrSBoxj5YtqhVzfMQQaUGWGRAW5wzOKbSSYe8VnV7Bv0j/EVvHv/ql
      b9w/5p/8BX9w4vpLH7wtDUPKHHFEggNrHUodthn7TZ/Dn9eLZvt8lJLJtBbs7huerBRcOBEj
      JUgpMMaBYJAp8L+XG9E/BeMEeyYid5LIWQSOTtdQZIbxIUmRpvzN1Ywrsx1204jnu5I3X0uI
      NRVR5nmOlJJbTwzzE4KhJiSNJmkhGB/WOAc3H6as7xjOLijmJxVCCIzxz+QJTqKURUqFtX5N
      pJA4nCc4UTKqozBw/U6GyS3GCXSkGFIF5+bAWi9xpVRIKYMEliipAeilGXGswxoMEnO95i8j
      foLZI4PwctQmUVjkAa0+SCvO2coskvJFn/JlQ5v9HX7zRMGTLcfjVceZY02ssZxZUGSFJbMS
      kwPG8Hwr5+RcC+u8FHBWApaDtMu/L7/Pf3fTEl/8+pe+eTla9OrpOEdFRQ6EcDTEYcfIS6iw
      EiCE3wxxWIKUi9a/kOX366FU/Z1SGI4MKfYeZCglKilurUVJ7TfHOYx1KCkxxgVHjwEGkDhi
      YWlIg3NgrEA1Y1QTUI7Y5bQbknZDc5Brzp+NaDcjAB4t5yxMK7JCsLQpmRpTLG1aLp6QxJGi
      1RRY6+3fiyebSOm48TDlyUrGQdfy3usNkiSsmQPrJLjaTHB9JkNJOAC3HxWcn3E0tD/LmAzw
      ARCppP+OA+vKAIWrvp8kanBvKAl/cN3FIWKuf6/3TwQTmL4jnzd+VT9A39rYp9NwfPosZ2Rj
      nccrLb51ZZqf/uwxly4fQ6Q5RZ6zmxqu39rgyfoY7702xaOHqzzaMXzzjVnSzLA43eX07R/y
      bHSCh3cfMnXlm6i8Q3frKbmaYOb0yYEpRIFYCuuYlWuMaEMsoHCwbySRcFghaEqDrjx+F6RE
      7UyBl2aeGB2ImvtLR8oNiGt/pLze4VFvmKDVkKSZI4kVAsnBwQFSCprNJs45siwjSWL29w9o
      NBKEkFhnUdKr58IUNBoQeBMkNKQltYqO1Uw1Y957K+az2wplDS6NOJ7EpLnjILXceATtVsSl
      0xolDQc9ATJGKYm1Dht8HyEcq9sFp+Y1H90qePN8QiORIFwQDJ6AjHV9TCpY3jAYAwszfs2c
      A5tbWrGklNRRyfBhuZx1fQwjEFJgnfGRqb5VPEz6XrJ/eckcrv5Lnf+rDP3d1xf4wd885p2z
      c0yNx/z49jbvv3+f05dP8NfvP2CxJbjfSfjdKxMQJ5xt5/zljV0uTTaZ29/kRw8OsNvbHB+f
      YeLgLm8v/VOKdsS/+P410vnzNC98nfTOBxQnThL1zX/u4ftERQ8bxVyeWkcZSy8zJEnEhFZY
      6+1May04hbGGPM/RWqO1xhhv3xdFQZxoqBX6kUt5FLHXUaEXpRTA5bMxNx9mXDzRBAXGGKTU
      pGkKQFEYhMiJoghjLEpB2ktRStFqNykKQ6+X0WzGnrisQwlDU1psuE0Sw5uvNtk5sLSbEiEc
      1++nXDoTkcRerVvn+MV1wyuLCWNDystYAUoBzvFsLeeTOylDLcGbr8QMtSunBSlUJSyK3LG8
      AcvrOVrDXNuxsicZbTkOMsnegWWy4XBOVOZO6dQ655BCBdPM1Yp6QOwetcZH+wK/LkN/9mCd
      J0ubvHt5gT/9i2e8+e5Zlm7fZP3qUywK1VR859XjxK7L1FiTqemY4kaP95/vsDCq2BUG2UnJ
      spxuJvngHqw2ztHL9xgVipnj0zx8pKsNL8fe9hYNVzAW57jRDmnP2677+x0ajQadThelFFIK
      tNL00l5gCEea5sE29gsbx/48N6h9gT71Lry51nek+reUpIeHlIKFmYgHzzPOHW+QxDFaa6yz
      OAetVlxdXwhHUVgf+450uJcj0vqQaeQN7rbMEKjKvBptS/LCsbLjo1pp5mg2NMu7ILRicQ4e
      r+Ts7Fu293KsFWgtaTe9f/abbzdI4uCf+ImHKIuk9BOXVns8fW45PytIZIrWiqVMc+16wUTL
      IISkPWLJsgbdbq8SNkmiBxxlITwTHPbZvMnSpx1+jQm/HPqtc9PMZZM8u/+U7V7K9VvP+d2v
      HOMXdzYZGR5mpC3RUhArzfrqJn+2rvmtr5/g5+9vs5Napqcjsp6m28v5aHUG2Yiw2T4zYzOM
      p5vMPP6IlbHJemPCiJOYhmrQ2dsgLwTWgnGgpCJNU1SwN5MkptdLg40nsCaodAFaa/KizBU4
      rA3e3EsEvpBewvYflLKO1Bw1GpHgoOMl8fBwe+BYv6PmHN7RVHgJahytVkJ4XBCgpKhCtvX9
      PeM+XSn4wQcHOOv43W+0yXL4+FbKUFPQSy0WWNsybO0UOOC77zZ4vp6jpGL2eBwEjME6kCis
      M54EBdx5lNE5sLREwVuL3pcxxqGU5sJsHohbV5/neVGuGM1m4terP69SxuAHbPqjbPtf/yE2
      fvhPnN6+jRSCf33HcepkxOmZMBHhiUogq01zgFZQFKXTJ9nZ3eWz60v82fIVTp4+RdJsMTw+
      webWNuiIjTf+AeYQkY1HoHAUxtL7xf+JmT6NlnB++y/5zhuOlirwvmkp1h0rS5v89MOnrBcx
      3/7qKV45VoZd/cWNcdy4dpe5CxeYbh6OEni17VyZGbbh+f3n3d0OWZQw3tbl0vCLT57y7uuL
      3HyQMTcZMz6s+vzzvqiGE1jnkMKbK8aAUi4QoKhs8PIZHQ4py1iHn59AcPdJxn7XMjel+ehm
      j9/+SpNY++8/Wcn59F7O736tyf/2gwP+g+8OkeYFj54bLpyMAAXVvEpJLEgzuHOnw+snFM55
      hvDmY+0LlGZOmubkWc7QUNubPNI7lj7ZVK+jOETnv6xt/+s09N0tQWvXcXLM8t2zghvrOWuN
      iLEhUMHjF9JvspSwsetIIke7UTqYluGhNmdevcjpd/5jGuMzqCimay1Jr4OLm9jDQRhgKwe/
      igp38bugNG7jAW+ehFhaMqtoqhB2xZPI7LEJvmN7/GRviFeOCT78cJ1L5zQ3nhcc7G6ztpqz
      OKspej1++OkmY0WPJePY2OgwORyxcPoY7G7xaK3LmfPzrN5fIpWgW0NcnopJhzUf/vwOuWry
      +tlx/vwHtxBRm8ko58//7QaLp+YZ7myzah2oiN97bxGQ3L//kGPHjhFFCiEdWpfEVTKJCP8q
      lPJOpLWw27F4pWLZORDsdgxXzsfcfVLwzTcaRMqH9wSSuUlJt+ft+f/wd3wiKIkV509IrHMI
      4XzOQHit5Ika1rcNYy1PrVIKnHWVNvbnyCqK1mwkNBuxZyIA5zVKycQOgllVR23+vkn8w0NO
      Tyk2ibm6rPhgTbEwAvlWxk+upjzf9HakdZAax6ePDVkBK1uOTs8GxvAS9OPOcVZHT/DYtXiQ
      aR4VMU/0GE9tcqRr1D9Ea5ho9S5Tm9f4V580EcaRYHj48CnWCpytY7z1sOzsZJi8YGc/59Gz
      fX7vexfRecb//GefceXyHGkXvvXNc8xOtPneN06xsb3L+9eeMzHa4P0PljAy5jvffAW736V3
      kNFJHb1eQXuowez8GG9fnufdS1M4BFMTMR/eWebm44LfeO8cMd3qOU6eXKTRiJDKE7Z3eMFW
      aQjPCFmWsbvbYWcv4+fXu6xuFVy9nfPpPcPHtzpcPttAIFicjbh6J+eDmxm/uJHywc2Ma3cN
      vUxgjODuk5wPb2Vcu5uRFTbc0yBC1txrAMnmjqWXOXITEkSVtJcoFSGlBiHZ2trFOQHChmSf
      P0dI4TWVqNc87BgCHxn7dbLz9wrBrhH07Jd/Jr25B68cEygZkxWOBw8y3joGS7swPgQ42Ny3
      PNuEN04qYi3oZoKPHhZ89ZwGB1JBdrCP63UQzaFf6eFH8hVmRw1fObtPrAEk09NTKKmgz7mq
      /5X08pSlpQ4902Z8ephm5NANze9/Y4qfXltmorTkqvWQTI63OHlikskpw9KzDaQU3gZ2Phv7
      +uVTbCxt8GA1pygEWVZw48E233hznrVsmUUUn97vstepGVJrERIxg0ERh89elqMoDM1mwupG
      l1YzYmHakaU5rVaTTgeyNCUXgrwoeP2M9xmcE4B3UPcOCj66ZZmd0rz+iuLx84IPb+ZMjkna
      iWRly4Zknl+f5bWCr54WzMzoIPXL56w1kxCCPM9DMrE/Hl9r+Dp+//IM79/1cA5i6XVXJNzA
      55VPKF7UV2L1F3/k3v/wBq8uasaH4MYTw+ko5/meI20mRNpLjlfmVbALBXeeGyZGBONtQZrD
      n9yZYWnqK3RPvhOkz68+i/atH/Cfn/+IoWZ9nTpM6ch7XXYKzdSQ5t6d5/RUxNxkm8JYZiZa
      7O92SNpt1lZ3GYoThiZb7Gx1mBhJ2DzIaSvLz66tcPnycchzxscbbGx0GU4UJtKsL22w2pW8
      fXGK9eebrKaS+TY83Cw4Mdciso7hySYfXt9hdrzFibko+BUuEBEMQC5KEwJIez6Uu7YDz9ct
      Z45JRkc0RV6gtbej87xACIHyF8KYEnqgvJnSjPuktGB53TvVB13LueMJJZEXFp6sGKJul8Up
      VVGBcw5jiwq746ngqMxsuf524LNfR+L/vLGzu0eSJOzv7TM8Moy1HsOUZ7nP3Wx++Eeuu/Ip
      nz3zqfXRFqw+7TLZklzd1lxZFMyNa4qiIElipBTcXynY7jheP6F4shvxP+X/CDV3BvsrSv/+
      4fKUhSf/mv/o1G1G+qBFn4ch6fUKkiTy0i9IXKUk/YhC5yAvCuJIV58ZY5FKYgqL1oOMa4xD
      SJBHpBfLZ1neKFjZMEyNKuanlLe/y5BPOLN24kUVSXFYrBH89dUOzURwbjFmfESGU0PERZSO
      uw0xf88Q/nH8uf6Y8hlhHFLp6s7bmXdiP/hgh2+dk+g+P9VaE5JXurouldTst+v//hJ/aTLv
      H3RwzgUMUUKe5TggSWLSNEWDI4k1757TrGymPFm17LsYIRyXjxlmxxLAE0/SiAHH0pblrTM+
      rv4gnYQzl0u36W89RJSwNP0NdvdvMDJQJzCY/Q3TxDlBr5sihSRNM+LYTyxJkiBZNTao/DTN
      aCQJCIG1hl4vZXR0uMon9If1pPRQAydfjHcLPI5mblIzNSbZ3rN8ej/lwsmIOOpP5Q9sSUVX
      njEN37qi2NoVbO1mjLRrTI2jDmE658OVUJo2IKWt7HmTpWx1JNNjsZfxDvYPDhBOMDTUZiiG
      SPvseZbnxFFEYUzQOMGHI5D3oWxunUH/+xHTf3H4PIxzEEWR19Bao6Qk0hFCSLRzDqkkWknG
      Wo6JIe0XXWuUFEglKHLrU90OkI5vXND8+GbBaycEw9kahwztv/WY3rrGwrnDppTr+6lHnnmT
      odfLEMKDx5rNJr1eDyUVeVHgrMU6RxxFGGuwwalOktgTnSgLZsoUvs85SFkmyV4OtVUKJsck
      I0MR1+9lzE0pZsc1rpKofc/rQuLNeJCac7C2bViYBiU1S0trTEyMEScSAfzkZw/5i58/46vv
      nOZ3vn6cg/2U4eEGna19dkSTYnef6ZGCG08Txoc0wuU8XsmZGVdkOezt7fOXP/uMvHMc1xhh
      d3uXs3NNptsGC/TygpFWjDGmyq43Gg263W74u2B4uF0JiL/L8Xl5/sHhmbZEhjYaSR9qlOpz
      Yy0ahZZCIqQEYWkPeWnv096yUsNxItGR1wo4kMLxzYuaD+4bnm+lyEv1NktgVhesGU0kITUv
      QtG+aIzIgwGC84bPYenvh9KK4ZE21jiKIkdHGqUkbdVif//AZzOjGKWUn7T25pzf1ICVcZ7R
      PflbwPiZVEzgAuZGDDBK/4i04MqFmJUNw/2lnFPz+sjscnktGxRCq6HoZoKxUcXk5CRxHIXo
      muUbXz/DWsfyD3/jBNuru/zF+xssrWW8cyIhmx0nWd5g9t0Jiizj+391h9/+jRke3sm4ma8w
      NDHK1GSDbtHDJI6Tk13uZyl/+rNtXhVdujMJxeY+33rvLDPDCXme47VkGgSEJY7joLj+7hjg
      BcH00md5Ob6r/tzjocBD+Qsc2iFIjSTGooJz5ZzEK1lb4UBcKb2cw9qCKEo4N9klQpAV62x3
      M5L2MC7tIp/c4OzJi+zfv07j/FvcU+O/1KSNOzzJQeIvreqDruXWnR7CgUo0nY7hyqsCKb39
      OzTcrLArAoEOCRtvUrggVXzo0liH7APd+XhCyQT+HCGcJ84jGKAcs5OK7T3Dx3dSD5doSM4s
      aOKoBqMVpvCOrVCcnNfcfJQRR4bxEY3A+x640vzzjProyTa9TsqQLnhlcZj/407O5aZ3bn/y
      o9t85x++RjuJQWRcOjvNtfvbTE5PcPH8DF97Y557t5+z3y1I9w6YPTXCwlcWWLtxn6jZIo79
      evd6Ke1WAwCpvAl2uDILSse+/v//t6Nc6xeJ3/WFeF6moX1I2lY1DEJIrHH0ipylpSW0AFI0
      qYHxKEMIwcryGkkSMzk1Ul3IE4ENEizYhs7S0CCf3qbz6D7x2AQjM3PsFjnZo5vIvEej2YTs
      i6dZul4WaHHwwnHr4N7jnN2NFIUDreimjq+f9lI6NwX5KNx9bLh0RuCExRrJ7v4eYxND1MUx
      jhpvHrKyQmKdl87iBSYImVzpTRYbnGMhjmIAf/2xYcVbF33UrNN1XLub0WpIXln0drd3PFXY
      NF8gUxRBT5YbGYhPSUFRwPV7B4yPR2xvWWLtQtzeIzF/67cvc/B4iY3ji0gp6PYKtIaDbsGx
      luIvP3zOqPRwknY7ZrPjWHAWpbyQA0kUSeK45SW+8CjPQSe+HvsHB7Tbbbrdro9YSUWn26Hd
      anvIuFLkRU6r2fjijf/CUecwDo8yW+1rHMQAM5bh3rLOoSR+AQgl0Trh7JnTiPUP/sjt7T4h
      EYYhbQI0QIWtLF7AjLuQZJBK0O3kHKSGP773Ksn4DLPz86yvrjE2O0+OIO910aNT3Bg6+blT
      jAQcW7tNsbFE+/I3GHv4p/zemSV/PyDNDffudVgcNoy0ypSkw9iAiKwmDbefW/ZSgWoqJkY1
      kdhnbm4SsIf38dBqeqd3sJbisFp1VZLLm0T1dwfIRNSSqfz2nUc5s+Mw3FYIUUIqHE9XLMsb
      BVfOxyjpkGUs3slKwv70Wpc3zsU0G/6aH//0Fjfy45wai/jGG+0gpQero0qCOByWdg6ufrLL
      2ckg7YXPMVS1tRCerxQSL5pA2zu7KKUxRUHSSAIwUaGUpNdLkVKitaLZSF6oNvvbj/pZrC3C
      s9sKK3Z4eFSrq477ugyDwGfGtRSOprRkVrBZxIzpHCXsQIVN6Tg4Z4PzJhHOkTQ0ShtOn4y4
      fup77CiNnYN1d0h2HAYCHRrDkSBffsjozDHU/avsb26zM7mH0gpjDDfvFVycKCA37O76Cw8P
      t5By0LsQAi4c8wteGMvt5yk91WJl6wBr4eTxmImxo3ErtgTRfdHyCyrnuGS+Xpp7cFmIHCkt
      ibQmywu08iCznT3LqbkIZwOcWQry3LC8nlall0Xh0ELhrCPNCja3u7RaTeanFFt7hkYoOJk4
      cYw/nBzi3tMirLLXbjUBiD7z4Ig5KMnOzi7NZoNIRR44F7SRdQ4lVGCIo7/fSBKSRoO0l5Ll
      OUmckGUZBtBaoXWEkv/vBkbKeYGX7iVhu/DsL3vWIggnLQQyMIqSksJYnLFogSCRlo7VSOsw
      DoQ7qpSwTr74WHvA/gnJb41+Ruv+f88deYkNMU7aGMVOnfTO9ZcYuQXR67H67DFRbx81fJxe
      9ozxdpPP7uwTWQO2wDoC1PgoxdxvRIGScGHeh2+V8uz4dNVw76Hi3SutYMLUUhrK/Rr8rH/+
      LxvOOayxOCswCPJewf21jLWtgtmphJmxgiI3SJFQFB63YzLD3Sc5C9OCIi9wVtPt9VBS0mo1
      +eR2l1ZD+gKhjuO1swkloS8eG2H3wIaMeSmc6siHsXD7UcZ+xzI9oTk9H7O1X5BmjokRRZRI
      kmSGSCufVMPj/4X0sBMqc/ElDNDwCNFGIybxpWPESev/F2f56Drmo+9rHexaReFAGBhSgrby
      6xRphTEW7ckgWMQCCiuJlQdd9XNV/+9SBXtZ+DYVSuR8e2aVEw+vMjs7TSEi/vj+Ozw5+wcv
      5cz+sVc45t/7A9TBDvHoBAfLT/j41vvMDO2zOJzRGhY0Gu2KAY21OGuRevA61pqKCHa2Dxgd
      G6bX2WN0dAhjDScnJWnh2N7uMjbWpHPQoxWcPoHAWTjodBkaDhDglxC9c4OQZiUlMlbkhePJ
      UkpmBN2u4a3zMftdx50nEqUkn94zWGeZm5Ts7jt2DhxnFmO0FqSp4d4z6KWWr76ukCriwklN
      nGgflLBFNX+Bb0YwMqSCVvb7ALC2VfDwec6lU76w/s9/tMfWbkESSbLc8jcfHjAzLhmbCFEw
      64Lv469rq+uVVBG83UM0AHWExpVBC3G0yfSrjH7olzddSjtfUGep+8zMAEXx5/tjUggm9aCV
      0A8DkVKiAZQwNIQklhBjwoXqApMaCgvO1mRhTfm7oDAZCwuz6MjDcr/d/JQ/2XqDbOLz7f9y
      PM8kROPQcbj2PG9NjPLm/A4Cnw6uFttSRWX6F2qwT4yXiAf7Xaxz9HoZaeod/JOjMe9/lqOb
      GScWFMZ0iOKIXigAMcYAyZd65nLEieKgCzceZpxdaKKkZLit0UowMuI4NlMyjbKpYfAAACAA
      SURBVF/TpbWM47MxG7sOJxSPlg27+/Da2RZaCz6922VxTtNoRKH4xlUSzyeuHDv7BVPjSShF
      FGQ57B4Ynq3mfOVSi9In+J2vtBlpe5v+332wy9kpweKUpN0Q1T6Dt/shOI6lBnA1cXmilvRL
      W+8nSDY3t8nznLm5qer44YLIX44pyhC1Cc/lKlu/JvLSHGKAOTInOCgE47of8n342rVfK578
      +J+5EXO36jYGdcaxvEE/wdVJkRLWa4MEsCglK8yKc46nOxH/Kv8O6an3KKQm+5yEgEs7uM1l
      zP42stHmt7N/w1fHnlMUBUPDDaB+BlHVKRAytn3TE55Aup2MPDfEse9c5pwjjuNQ1igoLNxY
      kVy40EBgqxJMYwxj420+z+QpAW6VxQRs71l29x2nj8XBSe6XTj54IFUpqUOIwTg+vd9ldlwy
      Oxl6sVCGXAnQDhdCsZ4gS8Ja37J0Uzg5n7CykbO8YRBYhlqaNPPlpXv7KVJFzE5o1rd8Af70
      qObxcoqWBe0o4tKCxlgTOinY8LtECBUIsOz+cJiMJLVveJg2SgZ4eaOro4cY0OL1ng6e5Q5p
      pEroBQZOnSQWfdVxL+ylD6RY6xA/+rN/6i4O3yOOjor3lkUkoSZUlmGn2jzyoVF/jtaeC4vc
      0u2mNBoJhTN8ujLMg+abPGudoTl3Bi0lmTF015/R2rnPKfOQs9FzRpOCR9sR0llOTxa0ZE6e
      FwwNJ5UELbsSlB69DcJKqzpfYQNorzRVKii189KsBJP1Mri1rTmxEJMXvpBlZsJLnM9zX46q
      IPv4dsrlMwlaex/JR5NK1Vk6zYLl5Q2SOGFsvGzu5IKWrb0aY1wVZfKMHtbd2Sri4azjk7s5
      SoIxgjS3jA1LJkcUBz3Hw2cd2o2IB89T3jwTMzNqkcJn/f09LHeWFBjH2RnBWFtUWsYGyRt0
      QxX8KAnUnycq7VNikkrcUimN63xJHcYcNG3q9ayJuaywq33OLzteliw9alRr/Dd/9s/cifgO
      40N1dKR+yPpiZSJIho4HfgKe6IzxCSWfPfWOceegh9KKLM2qyWZGcXtVktEmNtucnJYMJ46R
      kTaIPinjBIVxVea5rN6SUlUL2c/9/RLXt/tgUIr2qYjalPDEtN0R7Bz48zopJJMJJ+aigfDq
      Fy68c3x2L+fy2bhvrUr17IWDFAKlBHlhg31dS7oq/FqaSWXZZGB2X3Avq2iNFD6ytLvveLRc
      EGk4e8wDAHOjuH6vx6XjjqIwVU21dbYqdYwi//1GkqCU4trdLqcnJcPNOuJ3eH5lEMQzrBsg
      es8MvgzTGhO6xQ0uYMneZVKqbmJVEntftd1LfI6j156BZ/PMGkCMwvmIZXUZO/A9ZwX65Jzg
      o6uWb76iiCOqgo7yAfodvtoEqZMOIqjnslSuVIOiL5gipSJONCLNefe0pNvdxlpLnGjfoQxD
      v6Qo8TfO2VDbKj3SsbxnZceV7GCD6uyLgovBBSwX1RSwsrLG3Nw0QsJ4GyaG/Hkr25bOr4B7
      WduytJJawvUzXwml8BlkgVKEbm/9LUpAYBFS+vW39doL4TfUWM+0WsWAIM0Ej5ZzJkcFs+Oe
      8Tup5N7jlNdORkTKd1Cz1oReRmCMBwc2G41qTYRwvHa2wZ3HGW7DcHFBhf0+vA7lvvqcg3U2
      7B2UodhSm9XX7j8edq4qqK9rPF4AG34B4ZdCr/67rIDzforAZ/YFHu7Qc4ohZZHISpgKgXf8
      Nz75527j+V1MapkfE/XBQ44vhBR9iJYcbr5VSjtZtk0LmqGuUS0X0P9tjUHIWrqUatW5cmEC
      FIEy8kElEW2AEfTDNEQFaCtV4WEtEZxJodnePmB8YgghBm1b6+DDZcWVC8kXagDnHHkBn93z
      SM4zCx6ObUydJ6ihFSVT+9+9+nV90k9iClC6JnwofTGHFALrBDjfmKswgluPe1w8GeFsgcMR
      6Zj3P+vy9is+oVYKlMLkYf1C5tmVxAcgq/2y1rKxW/DwacbbpyO0GhQedUWeq/bEP6PBOYNU
      UaVVq+x5XxJOhtxCf+Tml+3l6WsZ/HfVgKByvJjwC0ETBIX1kSolSkBdOQfQCMHYsOTqsqGX
      ORYmvbqOdWmDEXpN9Xvd/Tcqf1yf5KjxMt62DeCyoO6VtMHh845WGY3w9wub5wRCaPaNpEAw
      Ebx6D11QHJbugxL/RYlSx40t4xOtF4gfYOfAMdSU1ZyOcr72O471bcPmjg+HnT2uGRvpa8Yl
      qHwiY2wg9BrXUybQPDEG7ecEjgJ8UK4iVO/g15rOd7UQdHqGbs/44IPAQ3vxHep6qU9mtZvC
      2/zBoX1w/wnz87NEWqB1XAkPWwo3IZga1WSFYHkrZ2FSV5+XSTLwjHj7WcFB6msoWpHjzGyd
      ja3WgWAVAATJ278fv+zwz+qTjS9+P9Bmf+i6Csk6hANdfk+EpCF+f8TGtf/WRek9AJbWLc/W
      Dc83DF8/p5gdOxoIVap4Kb3EE5UTV0+uPKf8Pe3ldDodxidGfLJFiNpBddpjcMouZsIXs0ih
      yMO6lT56vyQSob+ls17T1Lj+z8ef9tu0gwfgZ48Fb11uBiIdPJwXjr/+IOWtCxHjIxJrxZGa
      wq+RoBYAQTMIAIkKCaxKSlmJsRlaaZ88dCVQT1EYF4pyXFgv73SubuX0UsPirPbmoROsbhUs
      rRUgQLmCiydk2BuJMaIyK0sBUtnhh8Kb1x+kpKllqg0npn0zLGMdnz3OyZ3g1ELC2JC/9tU7
      KafGYaxdN9Aq6eBoaEJYaF40UwfPK7XOoMT+PGj2i/1Ey/1wGON9sBrD5eeu+8s2jk0qtvYs
      v3FBMz7Un1084maO0ICVvgnXfwd8ElJ6daW1IopipBCYStIHm004b38EGzGUb+OcI+oPrQUn
      x9+vT9pI11eAfvSzvkjwYkDKlxu3tet4vm5YnFMvaIG8gPER3668YnQTNqUytww4Xx1Wm4MC
      lAn39ItUJbCEIst8TW7U8tzU7WY0Wwk2mEq9bkajEWFMyVSWsSH4dMWyOOfRuc45JsckU2Me
      13/nieCD2wVjbThzrO6ppKM4zL7fAS2J18/ztTMNnIM//8k+rdix1YG1PbhwqsHkmAo2sRdA
      b5yNufk44+5yjgAuLUa0YtEnqGqzzjrnE5jKR7GOoq1S0pe+pf9MVPR15P6+hPD7719qscOR
      KV1ewisLx9yEZGvbeMfwc1SVUoOm0GAsHlSZYw4aI0l8hzGvFkPDVlu28/AtB+t22zVB1kRf
      dzQoJ1U+unXl4oRjrmzeWsfNy2vV6tx/2VYOp2O3I1hcSHCm4P1PDUrC5JhiflrT7VluPsg5
      u+CZ1qfj/eYUxvkqrcNRnb7nF0JUWsHagD0CcJa9vX3GxkfZ2+sEX8XXButIV5ET3/MH/38n
      KCNyhOqysmmvd0QtF05FFCbm2q00mEGictxK4i+jY8bmlZ9WrqMQgm+81mRj1zI2ITh3Orzp
      Bejv5i+l4NVTCUvrXnhu71sa46oSOrK0FKzXZGWDXSfrfNNgsYurw9199PTLDofDWMGe1QwJ
      gxwIj9YX1P1fAUEcCZa2LKdn5EA3t8Px28PtBMsOa6WKqZsplSZRiS8X1aKUISshoyNVZj/u
      46hie68mywyrCJlpi5J1tEJQmzy8oHIFZfRCCMnDdcfMXJcklowd90C8hyuOnX2LLXIuHC81
      l4dK1NqvjNeH6/XNt5y7DCZfxbcmxPaNoNVqkaV5SNLVDG4K7x8pFSAKoYrGK8FAvMaglHd2
      67WwSBkRS0Grpbl61/DGWY2WEmtylC6TcaKPHtzAZ845JkYkk6PqBQI8CiJzbErzbLXLpVmF
      DLXRpeCyAYjbb/IIIQa6UAzuSR8NlOZS3+eVfxlKU+vvuYHvKmlpUQTUcG2TlzAPh0OXSV/n
      4KALV29lvLaoguSpIxqlOdC/6QMPeoTjKBC+JXgoLq/UYDgqD4N5Di3yIO7j8P1K4i+rrEId
      r5NV0qlUjQMOcxkpqrKbfZEvYHi46Zkz5BYunFA0mjEH+x7nbkwRnk/2MbhfGBucedlHUKWG
      EQNEVucjhHSh1tr69uIVNDngX1xQ3ZYgJy0Iy/M1GB8WVQtJCGhUZ9E6qiIxl87E3HyQkeUW
      tG/n7o+FpJgLmkCIikhrO778vQxdfp79DbEELWVNoKLsOv2rvb2l37RxRx4/OvHV7wzH0uIq
      ge2Fcmb9W4SkcGicqBzZW48zvnJW0kxK51RUdn7pFPb3wq+1Qp0vKKMbxpYJCaryyjKclxWO
      I95nERYrXPEL1svHeb35U6rMwXBd8CMOMZDAlnqBOiHj75sLLzFLwnZOV8TVHmqEz+vWiQSC
      d7g+AVBL/jIyVjJ+7W+9ODnfKtHDdJVUENbaOouUAZIQTKjlDa/QT8xp8tzDpGUochdh/tb6
      DtSf3M4ZbUGzylMIej1L0qgTRGVRiQgJtv69qEPbg0GOwT1z3HqUcWw8JEL7tcsR3+m3w8ud
      OnocRfYvHu8n+LI24vAo6dUCW0VMJBxjOkP7DKTg6bpha8/STHT1hUF7uTYlrPG4lnJypeSv
      zXJ/nlSB+Esfwzk6RtBzEu0c0RHz3iwkTeloqZdPvpQo6lBEwNrQ4UAeVbvbH6KT1G1A/Li9
      DNOzcR/j9ffDtOH6sj5WNY7yNr32wvsFp9qvUb3Z/jqH5qG8hDdB6Dx69JSFhWMI6QWFkDoQ
      o8UYyeZ2zrnjkqKQmMLQtQ5jPNLUGq+ptI746bUO86OG6WFNkcd0u13iJCbtpWg95PMO5eqI
      qJprBYmwtvrsMO4mTJ7cWO48LWhimBmNXrpnL45+2voi7fCieTN4dDDhNmgahX10QesJmIrS
      ym+URe7ttY1d+PYljTGCvIw9VuaCqxZDBGe0cqx40fQp1aW1JYGUr9CELFSUGesTZca4SnJb
      5xiWhobwpZeHf/w1/O+Ho2E1U0ic9cxgBloqljh3qv+XVULGCh5tOuanB02yzm6XP/m/biGE
      wnYP+F++f4ONgzzAFCzp/g7XHmx57SgH18CHK73ju76ySzcvBYqAPOPGkz2UEpUf5b/vCW1m
      ZpYo9rZ36XAqKYljTRQpdju+rDLLMsB3djNBc0SR7/XzfD1lZtiwMB0hhW9865yjyAvfdj4E
      c/ptcv/eL+/7lHgvL+Bs9TMgEIGP76a0RMHp2ehLO6ui+q8UIi+J4IRAib+lPHwoCLzwppyB
      6x0WfsFPC6/DkoLqpSs6TTPIDQ2VsbrhGG3aUORQS+46tt+v3v1Uygv2M4GXamAKhzUuRAAc
      SsWMhRvLPonS72Br+XJ54Cp7/UWHufQDhKB6rVG5OHWBhx+VqRaiUZ8uFXztSjtolPph7txa
      xVjLbg43fnKb590Wrij4i798RJ5JvvruBB9+/IgnD1b59rdf4f5nT3i6kfKtb53lsw8e0DGO
      hROzjLqMeMzww393n0w3uDgJ//JfL/Gf/P5F5P4eD1YOeOudUyzdfcLmgWNybpI3z06Gta+j
      WQKJUoJ2yzOCbwYmsDbqI2S/LycXEj66fkCrrWvwovMlij477Fe0KHxrxzLsDAKlNHVNrfcp
      Bnal8hsdWMfxyUFHuR8s6QKxfD6wzXH4Vbai8jsCg7jSpAxgvsLQ6XjAZafjK+fK98QVhQlK
      wwtWrX2ouQgN0HznDb/XWkpJlmWsbBbMH/c9912w/T1BBS0QEhiVTVtiVkIo8MgXTIQ2gUp4
      ArWuQEpdLfZglvFo+7J/lPbtl3Gout0eMrxgwydARGgIFd5+6EIMyIFRyheX9KlNcDzZ7vLO
      2SE+vbvFmxfnMHaalQdPufTWGTY/ekwm4eKlY3x1yvKDR13OjSQ8X97kR9d3aBjJ9759mn/z
      4/vYSBBNtHmwkfGdrx/jWNvx1luSy6dGWHqSI1e2+dmH64wklu99+xX+7588RLwygbPw02s5
      zcSvuwfTCeYmFYhgqgiHErKKiAkRTEBjQnPbGp5ijAfTRVpRFHmVJTaFDEjfwcqy8qV6dSME
      3yS507HcedxDS8HpKVkhccu98fa2FzoFkn2jGFEWLehb42pXq/3vDxkTIkk1inTQkfYvT5EU
      he9plGV5hQAWQpBleQgQQJ77tUB4f6fT6ZI0EnAOmSSa4eE2b14YYq3bREflG0E8kRvja1XL
      lh7VYwuHVDVst3QySmleFD56IIRnJmtEpYKr+G84ubu9w7O9z8lk9Q13eP36hn95n1/iNMvo
      dnvkuaHXy+l0Ug/T7uSkacH+fodOr0e328VmuX/W0PEYBPn+HrupZKPrWHq6Xm2clJDlhr2D
      NGyfzwP09g+4/rzLN9+eRxkXIip1clDECX/4ndNc/+Au64WCwmKLgvdvb/LeOws0rQ8e1D6V
      Q0jLUMu/w+v1cxGvno5460LE3KQni8L4F1p4iVvmZgQrKxvkhR0QVr7Qx2ECNqiChggLoqjM
      0PKn1iils+znnyGIEogUXDyhabf6TSRXfad8k2QsYUxbBjtP2kM//XRVag7b9zOoQbxZ7TWj
      VIIo0kSRxoTPrLPoyJuD/l3GijT1mXalFFEUkaYZUknUf/lf/ME/VnabZqLY6TpuPi1YnCg3
      z1Ux7NJePQxVLV+iEO5dSaG0l1MUjiK39HpZeIjcvzcrTZFC0e31MIVl+eEjHpkhers7fPLZ
      KmNjMT/84AnPdwtm45zvf7TCvafbHJ8fJVKDqrTaLFEC3gAnSLPMR51CNKrdbtJLM6yxVSc0
      b186tg5gP48YbckqNLi33ePcpTnOLY7RVIKRsSZJI+H4zDDXP33Mk+Uur7w+y3ASI51lZGyM
      YmOT9Z5kZqLJ+HDEcLtBURSMjbZpNWM+/eQprjXMiZkmbnePXaeZjB2PtwpOLowxPdFguJ0Q
      RYLRoSbWOiZHBbceGRbnQi20C4BB4X/HhR6mUlRE0ktzGknCbsfSiiGOfAKxFA5QRub6pYmq
      Qr9lwrGfCcoRC8vWvmNtLefUTITJCzq9lDiKjnxVrf9+3x9VPODFaE1F5C/4d+UJ9UWEhDjW
      aC1RWqC08D5SrIjDj9YSrT22S+kIHXuYey5jhhoSKSXaOq/uBILTcxGFgaUtw7EJV0mVMpFR
      PmR/kstndn2sv8zomVAqqaVvkxFFEWVM2RhDq9Wk2+sBUBQFjVhjTcFH15/xrfcuMdyUjCSK
      D6494pX2HCPzM8z1NlnayTk7eeiV8tXaeEb1FWG+cNubPwpcKIAQAhFJ/zwhm2sKw2vHFNeW
      e9i5oVCB5RieGqtCtadPTuCwzDnBzvo+B6lj+twkk0kD2RR0DgSn2gnTV05UzAUNisJwamGC
      ojDYIufNK4toLcmzgne/chaHwblhwBeX2AB5Pn1sLEg4QxxJzh6PeLbqa4mrZJo3joNf1h9y
      dExOjATCkURaIkOVXCndjXGgvD3t8xo+jiKEwpjyHmUz3mrnKx+hoR1z4woFmDxDSN91b2//
      wAchcAwPDwUzfDDkWb7wo9tNKUzB8HCroifnBHleEMUBm+SgrJIbzBYPmkSHYRc1twjAoiNJ
      bhW7VhEZG8x2v1YaVxK4tyHPHYv44JZhYaIshbMVKrE2d0Tp3VQ2V7nA5fFGw7cNbzRioshH
      InCgW01fpKEVeVago4hMKVScMDkzyvHxhF/87B7zFxe50OlQGIeOfYMoKRjY7P4J1zAJn7Vr
      JMlgWNY5dLtRRRy8H+Jt3zsrgkvn26FDmrddnXH1eQLKPj2jU6P8e98dGfAhorh8RxckjTi8
      hLqGPyutKNGHxhiazYa3UT3gMjidpcMnQsTLsXsAB13D9r7jtTNRn/BxwaTs70/UF1cP856b
      VKxsFpyY87gV/3pVG0zV0nTyXO6z0oFJzNE+XTlGW4J1JfnRrYyzk4ahJhwcZBWDjY4Ml5mW
      Phop/QJPfCaUPu7vd0OrSq9xiqJAp5o4juh0ukSxpt3+5Wq0Aba3Duh2u8wfm0IKR1sZmtIg
      w56VYE3ts2M+/iwlZAXsdR23n8PZWREiKrXz65nNUpZJCiGx1PZfWYFTOk1eGvoIRjN0CiuJ
      UDVjBJLhqUlOSk2hfQvFSxdn+eGnTxkfH2VscphTStNuj0BTv4Tb67/L5+oniHCQvd0DkkZC
      HJfSzQPxermr2gOWc3DOVMhFB4H5XDUXEeannENEvtik2fJoTlPY6uUWJYE650OX1nli1JEM
      ax46PzuDVP69ac457jwuGGpBqylYnKubZJWS8osg4ADjI5Jnq3DzUcHpeUUcaZTsr9EIu2Gh
      KHynOBn+zguLVqLG8PTVggspOLeYkNuUVqtJrC2tVpOi8CHW+pn60b0h6hZG2aRYyVrTDA+3
      2dnZQ2tvsxtrSY6AwAz6KS+C5JxzjIy2GR5p0W9mlVMoo5ZACYe+Xzl/Povr6KaOm49SXjsm
      acSlGgoPH8Bf5YsbvHrsD6OFhyoZRohgjwt2dvYYHxv113ODALLg9oPrD1W+OPrBcUctDtQw
      jv5z1je2aLVatJpJH5M4VnYcWbPBwmydDKoQiZVNOlgUUkMqQoG+qOuQrTU+Tp9a4liDMIGp
      PKN4W1kiq5d+h+KZMuTpHO9/lvLuq1G1gc6pCnptTFkQIujv61+bCIPh3IOu49FSRrdr0Erw
      +tkyzGnDXGUA8/mXZojwatXCOLTyUOiSGXCO3EAjluSF5dqdHu+c1rUl0FcX4Es4SwaoCdmF
      vfeNCDxqoPYlSx+TAaY/ao9/FXjF4SGdDRyF8T/CoJSllcA7FxIebsHqjqSbeTu1NDV8K7wy
      82cpkzgeR+MLzMvuCeXbxY0xdDqdinhKx8wYT4gyYIb60YCeoA6/I+zzYsphYrIGy5VjcmLM
      vwSu0lYAkrEWLG8W5FaEudRhtnrzyrnXPpOz+G4Pwr/etSQcjxZVrK1t0O1mWFuaHkUIS8rg
      hHqi8EUeNYEcdB2t8IacOjJjDhFH/Sz+xPrcvb0O4N8fnOcWk3c5t6h57ZUGvdyx34EiF2Sp
      rVtdDrRd8YwRaV8xpqSvZd7eM3x4s8e1exnWCe49K2iE2obdvQN29w6q56naFVZM7qqoDiG+
      L5Vn4H6cvl+fMpz7IvH7+X/x/n/ZIREe017iTKhCTwYhHZdORaRCcHMFuml98/pH1hEGl2NM
      EfArzqfaS8XiHFEkWViYrZjFM4wKk61BXYejA4fbcrxcM7hD0qHub3n4e/2LmESSomfoWAGu
      DIfWErWCZNdKA2u9D1GC0XwXhUDY3tLk+OJceEu8oUziaBVVgmQwtu0qjXnzYc75E2UfnNKU
      q4m9CjlXGSnBi1LRO5QHBx2EEKRpRp6lHJuW3F3q8tHdlP2OIc9L4i/BhP5ZvaNoqvtpBc1E
      MhzDWMPy02sHLI5YLi3osLeR9/VkLSQ96K5vfqVPQP/7GPwocsfTJ6v4l4cPhmS/zPhlzu0f
      uj/Sg+vnuIBrl3ByNmJmTPHZvR5vn1beHg54i/L8uqbXBeKoN7fKKQSVV8JRBQLjYMcoxvv6
      fHqCLxfyl5tQ//kioDr7X2N7mAnKfkAtldOwBqFftDn9aoQMZFW4I6ookbeSBE54TI+SZfw/
      ZCTxb3WXlCLNlVYVwUKsiMI5R7PhzUUVEpHOiSqpA4Rj4QL+8n6tqKV5p9PDWksURdVrkKy1
      jA9bpsaaLG8Kdjpdxka0z9obEwBxEhdqNJSKEK4myGYi2c/hyrzm3Ky/f4lzajV9sb7fv/K5
      Pq8yrzYhPXJAMjo6wkthEUeMfuCe34d6P4HqHQyfR0NalAsoXYUKLZ/Pb4wDDI1YMD6uWd21
      zI72g43qm5dhJyEszvqFLMOl3r7zF/ZLVqO6I/FyzrWh1Gsg7BWYp7b3+yMgJfG5ur3IFw0H
      COlfSl1+5MrkX72pgvLNjX3RsIHzS9VdhodLIVESZ4hS+Qf1hGdNGVCrrtdOBFu7gpkqEke1
      jrgA/XqBuOpneVnUpOwZmvYKpkclpxZbFXH7ViY+LFomy8D6F+r1lVC+fi7h9sOUV4/Xn/W/
      IdNrpsMw5UMBiUpzBUFqHQjH8EhoU/klpd5R55WJRBDsmIhEWFrScBj8WA7tKIs5AnRZerax
      oWCjtN0QcHpe8f51w+zoUROr7XrfSc4NpNDLhypPLdtqaKFo6zpUVqnIQEBlJnJQvZVqtCxJ
      /H/Ye68gy5Lzzu+Xedz15b1pb6Z7Zno8gAEHhCGApRW1XIlLUQ9SaPWg4CqkCIVCipAe+Co9
      S4oNcVcrLaWVliKXJAiCBAg7xGAsxrXvaVfV5X3VteeeczL1kMfcW3Wru3pmyCW5+iZquuqa
      Y/J8mfmZ//f/ZNcsT0B4+2G56bd7RJI6lR3M6tFdgN3xXsd9dQ9+Jy1Mcq9GKxKCKzMhkmIj
      zcpmxOJ6yG4tYnzI5uwxm+2q5pmz5p7CiFjBrMwx3IdZOoooBbfmAsb7BP1TGerVQESSjL5E
      SjfNsia+R4LBilRIECVZ2KRwR5J0oDfWWjfMPLvObMU3oxmbR9owun0ci37/82oom5w0zb13
      I5MvCrSFKzS26I00sM2KEs8clXjxZuUOQ029btoMeTmXhq8o2MamMKu5iFeP7tnd7WQmv2ex
      ZaUT80cn2pqumslKb0yp0EQlROagJf+aiavja5XpeY1zbq4tm4TZYHVGcswgmsyvFLC9F9Bf
      TqpEdU92a50kAHo9EES66qd/CxAJtFuY8LFSmr2G4t5SwEBZ8tJFj0ZLs1uLuHm/zcVTMU1i
      527WscI+mroo242TvxcXlgjbOdpB8YBJkNG4kI0JIIQ2SFMdxIwUkrzn0VYBSgvsDj6oDHD3
      sDryjsiUsmlrSZ8VpnZgOrTi4HcetSsoLXCEwkJjSxgSbUJt2LVteTjMxk5Yy5IxSx3ReOAT
      ao9mw+fGfJvxfEQQlKjV6+RzeWq1OiMjA9m2FzMFJ4mztBSycxXXAmHFp9QJs0Ri7xsGtMRs
      Sl3AeKsNQkUYmvCabcctb5RB5XW2womUwooLPZQ2lEidjmfmuJtKrjMjx3dxuQAAIABJREFU
      koXFJg8C09dseMTlxLTXe5vt+XAz8zGxxZstP4YxO2g0LV+xW9OM9Ds0WiELayGXzppYdSEn
      KORsxodl1ySV0nSHT6vykrHoCnV2hkB7XaFmYmIcta6weiiDwBQqhYHBdxm/wxioif8gRYz5
      1lBraX7yUcjMgOT4aLJLxyv5gZW/x9kEFKUihyLSxhEV6XV37xS9JIgXX1tkLbxsCbJjgZQC
      XBHRGzeQiW1CjlZsMnRepM6gBAiiKERrSbFgkHeFvEl8GL7+5AGYTT6hC0kSR6ZeV8erSPZQ
      zP9VNukS51JkuHzTkyzbUZRSVKtV+voq1GqNdACktOIYuwFG1esNXNds9flcHlJkZPeqHsUF
      JKW84HzSnFvDu/Nt1ORBgqzDnksSB08fUmBWtmbLR2lNEAneu1GnUtDceQA5V/DCWYXvhwRB
      QLGY67JTOxeMZBxNS6Ne02//awcdSdsRrG4FTA32tpttC5SMcwxWN/1IFCmCMEIIhcTixQse
      nmvxwa0WIy1NwQuNWZaEYlPvbj9MI9mZjA9jAVb8WqgUdeXgCkXeitLvJY5sp0RaEijIW8aE
      stIJa+z+vAzxHuJXdo1LZuGK9KITIiPLEvT1FeNsoMdMBAvbipzQnJ+WKO0SaRl/M3HwzEWZ
      iEKG4rNskZpN+xcrIbVhJRbWAdu605E1pXuSSqVEEBgmA8dxsG0DM7BtKy4UCWJwlsl+JrZ5
      pOIKq3jSmMZ43f5D9rAOrmHJjnEYN03ncbK1GVY2DNz83CxxxZ2gWMzTaDRQynSPV8ozRSo9
      n5vAdMORXa9lvz3agg4jTRAq8t7hVVtSiLh+VnUED+KIlK3RykSKXMdCSptLZ/O8d7NJGISc
      GLUY64+JhdPdVaG6aAtNxllFymDyEzdJaywhKMgQa5/iNpRNoCUWioodojW0tUXZDmJlj0wo
      Mx6RihVQixw8GfS8R61N1xhLaAIt6SqBkjKm51EChIzzNCZWJ6RgckgwNeTw7vUGWlvshZKi
      FXXsHRKBxrYlYRpRiuPKQtL2AxAmjOrlbIK2wnHjkKg0TpaKTCz9wESINcO0Pe0k6CXNMSSO
      tuvG3UpEtqkKiIvG46mqMnq9/XamH2psz+pdtyy6V7Xs9e4/XcemGRpzY3XHRE8cx6Hd9nFd
      lyBoY9smkmIKW7L76X3wA9Ox94l7iNbw/o0WL53zujrG9zyTgDA0UJAkmCGlhRSSKF65lVbo
      sIVAcum0RONydylibS7k6eMd7HZI6pFFXoYJySWtZotcLket1gRIezJYliQIQ3Kehx9nUFUU
      4bqg/AC3mMBowBEG2l2xggP+kBRQsYN9OZZMTE2wZxZn9tWZmdh2QleR4PgNQxtIms02c/MP
      CCNNQxnKQiGg5gtqvsiUTghsS8T2v3FQowh8P8BxLFotn+pekyiKqNd9/FZEvebT9kOq1RpB
      GMYPTse3bJgQDAYpSkO03fcnYr/FdI9J3Jr4nfR4tVqNWr1OEJimGfVGE6VMF3mlNM1Wm3fn
      WxybNnDplt9Or6eT7e6A9Fi583mPcrlE3pUUcjlsS1Io5LBs03vZy1k4riSXd5OkcPIYqdd8
      fN9QSkopCYLEfOi+587V3/fDg5el4fq9NmenbBz7IdefHFEYqnlBgk7VJCxtppTSdA+KVJsw
      8ol0Gynh1JRLG8HNxRC/3ZHA04ZDtfM6DbjS7NgGPyQNOFBKfL+N57qoyOwcQbuNCtt4cRRH
      CvBEmP5OEl1MutQ8wvKRgCMUBakZsHwO5SWRwnjWnREez/XoHxwmcmwWVwPOTNjc33b4xq0y
      Xzu2y4UJ4wQn1CciVsjkyvL5HPVaA9s2jeKiOJHhuja+76ezNuG2SdL9JjMpUvvSNJlINMYM
      1O5uHaU1fZUCWsWN/PY97SQen88XqNVqKKXI53Ls7lUBTaPZ4v6Ow/FjHlqFVGum+7wUErtk
      x+NyiAY9RLHaQbZa12sNCkUPHXfi0RqDp9LJjDWfbbdDrEijlSCMQlSkCNphvIu0cRyHIAhi
      qLmg3TYdcMIwBplZFrZtsVMN0UGbSvHhTT/AXEuSCzLIUYMDklZWuCKIi2mkjJ3NOOurNZdO
      21QbmptrEUUr4sSYzRtXfYYGHFQYMVQSTA14+H6bUqlozGzbFPYXCoZ1I4o09Xoj1QtpSdOz
      ON4Fu5xjDdVqC8exCaOIXM4lChWu56QTK4oiA060LUTs1JfxsURMIXPYYBi7zZywHWhuPQgI
      Qs1gv8VQRTLfUjR9ha0U2xd/iZ/sXWZv+Q67osxH+hi/UXmNsqfisrqYCEtqSqVcGutKYNVC
      avIFL47amGhSFIdADcdPUq4YZx47oi0J7Ynneel1Kx3Fmczu2wvDMG6Z1CIpAHccB6U1URiy
      UrPpH3Uo5i2UMul9S4o05HpYUk0nmvyQnIMWhq9/dW2DmdkJEtMwiYogzKq7/7tJwbvrOaAx
      3Rjj0sbk/UTxE95/IQwMIggV69sR5aLLo5TfULAkyp8kkzS2I1AqBqpphRQSS2RdbiIVEQat
      NEJV8CQzYxavXVas7QScnHWZHROgLd69GTJSERQLhgcJiJ9BFpFzpOnhawIm5podJyueyaJ4
      Iv5+rDNa02r66VhorbFtFTcetMhZklqtged5+L6P6zkUCt7hEwAy2/mDmy2eGzahpa16xP/0
      eoH+8Qle3XTYmn0ZRmZZGDvOQnULXahAFHJv+QrP5LdjUlKdDmYiie2erOyuG+PSY3r0LMud
      ODgiDbUl7ARaCIQ238vlMpbHJDRqoN7ZOR3Hpq9SOpDJte0cKzshbc/h1GSexN3MnLQ4d/FQ
      ++GgB6zR+IH5QZvi8xMnp1EqiCNlGXFUOhFiKZVMkXcYAwXtmDYyAQZaaXjKmCi5nItlWTQa
      TXI5l41d07Dv9KRLX8ms5Fol434QaKY1sX8QR1/iElgzN2MAZHxP2WpsQs7aslLC49VNxV5D
      87WXHFY2YWzAQkURiJCnTknur4Bai7gwa1bkjMVZ0moF5PJJUKKbyCAd5Y6LNllnYmU3HC+G
      c1TSarViU9xQxEShwnXddOxcxyBtY62JWFhqMTWe4/aDKqdn+9Nzb+4pxj2NF8eLRsvw0nCT
      5lCe9879h+ytLFIK61S3G1TGxszXLJtvV/4BI7XfZarkG5oSjeG/6XA4G3Vjdycp8FRtYoUw
      LYESLHxnvEqg4uxh0jVFZNsC0pKmbekjlTaTSl7y1rWWof3O2QwPewwVBTlpCK0OPUqcy2sH
      Ck+aOPn2XsTCekA7NPiZFy/kzcMhCQuTOpbmUat912nqBZQC247j2ilCcv82JLoCBqWSySss
      rbdMr4AO+sEoTlpJKQhCTQenb0/4eZqcVMYc1sSJUpnUPBszU9pmBW/4ipUtzbNnLZQKGenX
      aMK0P5ptK87MWCysWbx7J+TYiGCwbK4/CBSrq2ucODETc5X23k33v25gH9nua3ZFhec55PNe
      albuj64Z3VGI7cv/RIv6dX702iZ9+QYMVHDRXDw5wtVbG9yaq/H1MyV+enuXl88N8Yc3Bfe3
      YWXwWU6+9DKbtZCt2hw3fnKV8z//6wxNj6UnKaxd5z+Rv89AITLtOHVSWGNAV/WaYUWu9JkJ
      oDQ0Ipu8FZpMo4jxNDrOsXbQn2d9q0id7wQVaVoIZQ2UO6HGKgks66SgxLw3N7+I5VXYsUrM
      TLgsrEc0mopSwWJ80MIPTI1ErRmldvJQn81ePaLpG6fb1xauUBSLFkODDgO5uPgiduS7cPAx
      pDx+POw3UYzzCYYWRaaFI52PcHe3TrGYx7YTB9kcI4w01277PH2yO+TZCafuVS/RKaYWIFOq
      lCYzDm+a/sJxtjy+9PlVRbkg6C+bCE4abo6MOdmpqErB4rpibzfk6eNW/JYJpXcukp3IgM7f
      01EQ2TUmrycw9oQ2f//nOj9v1+tNVLXK7duLiAGPXzs1zPfeX+LMzACvvb1KRbRZyjX5cKlF
      yWrS8CcQfguWbrH6YYn6VpXKV3+GyUuVLuVX1S3qg6e5fc/jpUIT4kydWc1NY4xiye16AFJA
      0QpNmlxJ+u02QmgkpkGcSjHw3cqSEMeK2I7WOjI2ZHrDnSwH3Wn/RGamJxFCUF8OiJTLE8dN
      0Uy1oVhaD3FswWCfxVCfhesY/Mx2NaJSlJyddVDARmTHUQYoW+qQLoWJAiTFRCZ0vB8FmYD9
      DG6ot/Ph+4YXx7bjIpZ4ot1bDDkxbh2YWMaEypJLSbOOXtI5LQxaM35GQBhZWLaJyKl4NRBC
      UK0rxgZNBWDWS06mEy0x4cAEV2bHLeaRrGyFLG6bdliXjkncfZSB++3+w6TzM3u7DZrNFiOj
      /RxwnjHBGSEkcnHP4vqqR1gcw9EW379lcWsR3r4VsVLVlMpl/uWVFk+NeLxxv80vnqiz3Wjx
      3EsvUBkawbJtEEmnl47BLg2AZfOX6gU+Wk0uMBnazhWr8wdAU5QBA3bb2Ihx7FkKmXITZTcr
      YwWxTKhWx6qkI5Q2rYM62Q2S73WuRIkkkacTI5IHS+3U7KoULc4f9zg55dBfkpQK5gEVcpKp
      EYeJYTu9lorUDNuK/pgDx1xtdm/C2EGpEnQ8uo7/LCRGoaUQyJSqZb9oRkcH8eLEGoDQgr2a
      otU05ZQHHN+Uysb8pL77IdLrPSEEtm3C4xA3w9PQbCkavsax4xUWs7t2YsCSVTeKQsLQULEc
      G7cIbZuLpyyGB222qqT300vxO1/b/1w7/y6W8gwO9mNIk2VHnYIg0JIGeRAW1v/43/3ab88O
      NhgoO/zs56ZpN2s8f7LARrXG2dODfPWLM7SwOH/pGKsbPj9zfgxV2+EntQGCJ76AHhjCG5mi
      tngDZVXIl4tdFxS4ZQY3r3OsP2Ejy+LpiSPaOXF62Xk6Dvwb3JKO4RHxhNpPoKQSEyM+rj44
      OMYGF+wvrUxs7WotwsrZ5LyDitcztCpMVZgjs/vq+ATJZDemhKkRENqi5bfjAhlTXaai2PmM
      v5MA0DrDo0ZMpVXntPEDxZXbTfxWxLlZe9817L8Hc0laJ7XOB1fch5lIQogU+mD4UiVzq5rj
      EzaeE+/IWsSTxGSxwygkipXeccyiEQbmGsoFk/gs5y2u3I/o8xQ5V8S3nOyAIp2RSZLNb4XY
      jkUCyEt8wQSg2Q3SzO5FoPGVTYREbF77HW2376cD09m9r3tU4P0P9nh+2CjNjzcH+c75f4yw
      H06IqrVGrt3jv7B+l3I+gdmKNMSVJbsyezzBjBgbLjNhEg7+BL0ohFntk2Kc5OY7j6m1xpJO
      104QRWaAOvkvzWdV+vCvrGhOnCxQLjwsdaq4cnmJnTY8+9QkBSdB0wrmb28zcWYIF9jZrJLr
      K+BaJouqgoDFzYCRvhyOYzpltoMA03NZY1vmobqeG8MkFKVSvuO5yHTCJ/d49XaLs9MS26b3
      8+t19You3yqRMNLYMdXJUdrFaq0JQs31uYBqQzE9KpkZlV2R4a3VXUSpwEBBsr7VZKi/QK1q
      mnfk8zlaLd8kxxyPq3eaDOQt5hc3OHuqn7GyY/p5iaQfgh1j04ixaOB5cTG+SBaywwtBjB8o
      kx5q3Tw/H92+SxD2gI8KOHGqyE/rHu83PfL5Bvn1m48cHCEEqn+chUYJiTFT0hWuw0lNO5R0
      Ob0d5g1ZIXhmz5v+tCJeEbUS6e9SxgwSIlNsQ0uSNHPuNIey7TnB+jw5IVi6V+enH1RZWQ+I
      NOyFSXw8kYiFpTYXT1b41vdusbm2zV/8+B67Lc3Kwi6BhvmlXcIwJNKKa1cXeOPKOst3l/md
      P7rB9Qd73Ln1gL94/R51P+Tu3RXe/WCBuyt7REoRBAFhGFIo5MjMtm7lB6g2FK4FziHVbIdJ
      wo6QOMfZM4MwnowPQ2V2PmPHFjx1yuFzT3q4tuSNqxEbuwnRFnx0eY1Xr6whpOatD1YJ/JA3
      3l9itxWxsLjJ2+/Ps7jdxpaKvc1lqiqg3ahRVxb1ZoDfjmLOIDet9U6oEU0/ZOtA1LTTMQYz
      sdthYo7G4eT/5rd++bcJd9KVoFgspQCy/ZLzJOPDDmNDNmODFlu7Ecul8492TmyH5R3Ni/n7
      JFw5Ca9opz0nBNRqLdq+IWuKQtM7NwhCLGHRboe02wnOQ8ZQbYuWH9Bq+rSDEJMVDU0I0XJM
      RtWyCcIQSxqwnbEquu3INNad2oowVJJMD1js7LR556bPwESeVhydMja+4sqVDfoHXdZ3Q45P
      VigVbF59b4WSiri/ukVhoJ+d+RWcis1r16u8cHaQkcEcW8rjlQuDCMtBBnWuL8LG8iYvffYU
      126ucfbEMKBxXS9l2UhqlTslCDU37rV4YtY1jQbjx3tAG3oqroxhCYnCZP9mZZ0c2CF6H8us
      vkJAOW8xPeJwdylEKUGpIFh6sEdfBXzLYW2lxvzCJi++cII331tib6vOU8/P8s77Dzg1XULa
      Fu99tMF0n2A5HMAPXXZqiumRHJa0UtCj49hYtsRz3bTUNjGDlM5aLUVKc3dZcX8lotbQzK8b
      Zou+AsgEFJbcZM47Gs21EIJnK4vYm3OP/jCw3X+W+9tx1CMeKK06HeJk9TefD8OIRrNJtVoD
      JHvVRuxUQasVUKs1aLVM5i9oB2mNQBQpwjBEIGg0W7RaAfV6E98PTNKNrLPf/hWi+/5kGrWY
      HrQo2wonjraGOhugIAhphpJf+OIJ3nl/gVpLEQmDR1rfaVEsxGZdocznz5V5/c27VENTTOI5
      Fm99sICVd9HNkP7BMkMVD9cVuK6F57kkUcbrdwPmltvmpInzquHDj1pcnHViuELmTh9mBqkI
      graK/Y2E99XUbQQhRNFDsx5dYmj0OxxRBGARhkb5Lp7wqDfh1rwiVJIz56e4eWMFgWBzq8Yb
      783jFR1yRZeBikux5LLyYJOFakgkFEMlxalZwdOnFKWK5PuX21x50ObtOxEfLgi2aoZ1XAgd
      h6kVd5ZDPphTfPgAdnZ8qr7i5oKiP6949qTg9Lhmog9WtxVv3wyTeoCj3fB+mekPePLWq7w/
      fPzRx+gb4f/mP+LUyps4usWLxftMlfy48Cn7rmGn1unvUhrIs4pNAmPbGYSi49hoHeF5LkLI
      DDbgGtvZsg1fjW1bBIFxwERcmJ7AdXv1HksfqMjqXT1bMNCBU08e+blzY1w4NQRoBvtclteq
      DPYVGfEsnr84xOtvL3BisIAd+tx9sItbKpIvFSg1F7n2oEglb7O80WJoaICCa+P7EcODSSDB
      9AW4/FGLJ2Zcbi0ELG+ELG8EtH3D8TM1bMekXp2RrcPNFpMoiqjVmti2ldrKUWSSR36gaLV8
      yuUyQhD7FL2l1fJx3SLNZpAe2xwrIggMA/XsiEO1HnKrIbl+V1HGZSfv8MoLFS7P7dFfyVFd
      3OS7P77HyEg//QOCK1e3GRooUu6z2PVDrP4cx8ZDHEfiOVDM2RTzgqWNiPl5E1jQCDxP8gd/
      fI3nnimyuRPhj+b4SA7xyoxHJZ91Nxrrh8vX7/Llz55EbFz9He0E982Ay6Mgy7vl/UWX19Rn
      2Oo/jy70PfLzaTJjd53Ztdf4tYEPqOSTssbk7BmFHsRKS4ZPiY+E3pdB7aRvTGxlrc3RqiHk
      LegM7Byl3C75zN21iPJYnuH+h6JHur/bkQDrvCfDU8oBrFKt5rOzs8P09Hj8imBjJ6JVD5kZ
      dQgjzfJmyPRIXIQkknN0nzUZm4P3YqgI04hZ7CwmOQlTUGT8rWIxlwYLDhuearVJqVSgVjPg
      NSEEhUKezc0tSqUSQgiDu3Edg00KQjarkqUtwQtPeLi2Say99uYDXn55hqBlMuema5EmCgXr
      61uMTwyZcdSmyUrCdB3H1gzjntIsbQhe/dFtvvTKCH/2/RWeO1nm2x/VOVH0+fznjvHRjS1e
      vljhB9e2+fDyIs89fRyxcfV/1VHto/Tm87nckUygTmm1Nf/kxhPsjD+HGJw48o6ileLCjX/B
      r07dx43LG5OC+IRtzYQyswSYECJLsggyc4aMmSAJkyUPuq2MA9tn67Th9uPK/bWQwmiBgYqM
      EZCPuLdOpd83AcIwwrHtHrtPFjIVWrLXiFhZbXNmOmuA0Xmsh5+79y5gQslZI74wDnjYtpW+
      lhwlcY4P8wGCIOskozWxIqqOf43JalCrCVBP0gpgftWAK7f2FANlScPXDJQFrbYpDz09LQ2+
      KG1JK9MIncZU2yWMG2B06fJd+OjDGxw7PcDt+RZu4DD15BDTwS7NQpGl+7u8cLrIGwstgt09
      fv4L57DDMMSPgUOWZRMEAa77OL2ewHPgpeJtvndXoQZ+aX8g/FARUnLj+K/yrZVv8VnvFiOV
      xDk1D8DUKh+sgtJas9uE77z5gPLYSUYHLJ4cqeNYnSn+zCQwGPKPr/wA5bzg5u0aSsOlJ8sU
      8486WDIxD1PGXmOUfFbS9BULSz5PHOvOlhsE7OE2/sPO1zm2yb922jJVpa+l3xAZY0QvcRyL
      LtIlSP/upEpPGAST3aVkw4Xjbhw+NfTtxjwxi9puTRFGAieFYsgOZTeRP9kRxtaAsGwsK8IS
      0GgpdvZ8PnfMoZl0bNc2q8vrvN6qUc9VGPVsvv/OEmLp/f9ZU7+NZVs4cUzfFJs/3jagtGa3
      Dv9i4xV2Jl9AWI9hKmiF2FpmauMdfmPkA/JuL9y9eTALVY8fzhUJZYHtrRb5z/0qK/khXrj3
      f/FLUwuAceoQcb1pHBUwtb+fYAbEK87lhYgz50t4vTr87bsnpaOsqi593djbdkdT8IMiuXbX
      5/S4hbdv1nabVUeL9yfK30tqtRY7O7tMT0+wf2cx/kIMGxFZ0uxRqqGUYGtrh6Gh/jTf8ygx
      42KgGbWm4vpcwJMnHPKeoB2CY+uY4EBgW0lSMcnjGH2dWwkQOmKoXxIpwYc3Ap6ZFVhSYdsG
      fGk5Oda2W0wN52k0W1j//X/59387bzfi5mqG9Xg/p+ZRJoMQgrwreKYwx8rtB2wNPNGTVuSw
      7+owYCfKs74TUGtE3KuX0FFIv2eqf9bqNn+6NMVbG0PYSjExKLh75t+hlqsgvDwbdcnLuVum
      D65IyHhJzaKEu+ZxJ3biA7QCTbUF8zuKE9MPNxPTaqjYosnyLJjMNMlDO2Q8kGzshAgNxVyS
      +zia+dN5lCy6dvjFSmnhum6Mue+WrD4AdEeoNEkbHDaWSsHeXo1SqXBkc1oIqNebtNshxYLL
      5IjDO9frrGzD6mZIqAx4MOl3kOyUCZJAKUUpD/OrmqkRh5xrMTXmcX1RUw0kc2ua3ZbDwrZi
      dKLM3bWIjbqN2L7xT9NMcKdo3Y0VeRhysFOidptv3irx/ol/xFApT7Ryn/zoJKvKQwo4GWyx
      6A3RiA7Zwv0GulmjFDUZosl09UNyepvXKl+ntHIb3TfCVt8MOB4jOZvQctiJJHr1Pv+187uU
      ct20jGlJHzzUdt8PyUheW9kJmd+FYtnGdS0qRclIf0d/0X1j1n08s1Kn7XikjOkajWKGYdhV
      HJ5Is+GTz+dZXA/Zq0UE7ZCzUyY0msX6HyUPV/yHSadjrVWSC6BrTJPV+nCdONxM63lODTs7
      NaSU2LYxxelwcBc2JWEYoHFQCEoFycpmxOcuetRbitWteHeQmuvzIV95Pk8YaSoFU0MSxWFf
      x0ksdPMMHlERllxc0ukxcYgUv/d771EaLbPnw69/7QwJnXhzc5OiFzC8/Abe2AUac1cJ5q5w
      euYEbd9nd3mePJKJMxdo7W5TPfkCu1FHQsorgJunRJPaO3/Buzs1Tr3yy0zaOaJViPwGT5dg
      9c6HjFSKLMsiDJ+CUj/buxalnEqvOcXpxBTc+23czoellKbeaOA4Dp7rECnNh/Mh262Iz79Q
      xnUcWr5Pzus9ZBn8oiOsHGeSGo24OMO2cVw7TvTpOKfhp5EY07vKRwhJOwgYqnjk7SZ3Fk2x
      iOMWP6ZKP6bohHgsYeuma8L3QuT2OMhjndLsNJJyuUi1WiehmgfTZGVq0AcEuZwJf1ebiqIn
      uHIvoFwQTA7b7NYVfUWLxS3NT674rG0HvHA+z9m4vjsB6kXaeCpCPGQCdF+cIWPt5OAslYs8
      fXaYN66s0643+OF7y2zVA37hqT7+t2+uExV/ynPlD7i2XaMgNc/d/j4/3bAYO3Eezy3hrS/x
      57/3f3LsSwvslJ/i2NNnugdYCwrDYzilfqIHN7GL/UgdMTI9Q/32B9jVKvaDb1Af/ToMn0IU
      +/nx6jl+g+tm+DtCnCaeLmK6w95mWb1hyuWiSFFvtLi9EjA2W+ZU3sb327RaLVTSkFopwiCk
      VCrGuYhuLNP+B2tMDFNQvrO9R6lUNLWqURRnsyXFYiFlck6iLu12G4RAReFDsS0HztkTPXp0
      UXG4OQsmmKNmQQg6Xvv0JCnmqVSK8SuZvnme02VK9pcs+kswNRJ/UmvyrsXr19u88kwOKQVN
      X3HtbpvVrYhXP2zxC58toF0LpaFoRVjobKSC0MRpu5tLZ6K16UqY2LfNps/aVgvLlexuN/BD
      xepGjUAJvviZcabPXSTonyCX9/j8E2Nc8tZ4LrfC+l4bu6+fhswxev45Tn3xK+jtvYPns2zC
      RgPhuoSVERrVPWNKzd/HGpnGba0wXBYUhobS7ywWzrLTiM2dDr777B4OX5UsyzAUGLYIn1BZ
      pglEEMTbsZlM7bZJttmOkwKxHo5Vl5SKBVzXoD7L5QK5nE0u51GplOjrK1EqFbAs816lUqJU
      ylMq5SiVcvT1FXBcl2Ixv6++4LB7+fhKqbWOu3vqjnzKweMqpWPz52OfqqeYpoxZB8j4qtKf
      h51PKVjfVfSXZQrjKOQkz57zCBB84bk8NxYjXEKKoo1WEWHUURTfaDRN1ZEQKaFUEBrctud6
      NJtNIqVoSUmxkKPtB2ztNtnebbOzWUfbRmEATo8p1t+7ysbn/2P8H/0LprwaO82A4VKRDdGH
      dCoUx5+kNtNmozd/ERvKQT75ZbSGDQFiHNYAPaxw5/6Cr02t8CfyyzheAAAgAElEQVQ3S2w/
      cy79TnX0Av/LmkNpaYGzco5nCks0A4ErNWN9ZjtXWvdkdsjlPMIwIud5BKGmtqkolzy0dtJi
      fSFNbDoptoGHJ9OSRNzqjmJswJQFepaNirKmEAaymx2jO7pjAp4zExaX7wcoBc+eeViI+uPb
      /eZe4gKZQw6RVVNx+Ic+wbm7MUmCjY0dBgb6joRIlRKGyiawcGOuzfljrokEWoKZMZtWKHiw
      3DSN2DtM+9QJ3t7ZJYpMrychRNx9u0Cr1UJrTalYpN5oGErEKMRzXdM6xzZEV0HcF0vGLAr3
      Nx3+KPwqeneXf9T+U/pdzU83PO68/F9xLSyk9rGQBvb8qIjRmAvjazdwH/yQL4yukLMUS3vw
      zwd+CwbGuj5rIA8aqluQK6LbLSa33ue8f4VtMcBpe4XBXJucpbCkZqXucm44m4m7jYgHTZsL
      p3L7LwMwTNLruxBEmu265uljJomUkIGt7go8W7O8a7Hsl3jvnuD50S2+fCluUKcyrLrAYq9a
      w7IsCgX3wAToVJCrdwIuzlr7zJLOf/mEEyCO/oksaZc9FkkU0w6FoXEm9zvGSj880ND7nImP
      2V2UL4RkbW2TwcH+uOTzcEmilskEXt6MuLMU8fRZj0rRTIpdX3D/XpMnT2Vw/y4foFgoIC0r
      ToS5KVGRaULs0A7a5PM5pGXhxl0eOx0I18mmqQBODodcuvsTPtTnGS6YzGyhPoe+9TbOmS8R
      atKpKI6ANhxp73D7D/4H/vNfnsJzbMII5jYinIrP/k0kSZhQGTZ/u3mWi19kSf8sQkrea7fA
      r0PgI+o7CKG5tPQus9YGF4dqLGxL8gMWew24NdekIfppOkVyIqCmC+w1NLfGvoZu1qm0V7l9
      d5HW7i4rfU9jC8V25Qw02zA8bPIhM5r3t2/zZPWPGS6GSJnZtkCcjX34GAgB48MWi+sR06Od
      S+InW/X3j5uZBDJ1hBMzPAHYKQ3SIm2BJaSO/UPirjKdVPdZGPowEzH5vH0AcqEYHR04+PlE
      eeN7VirO+0Baw9xoafqKkjevNPnyC8a8lEKgBLx/O2SwJOJ8g850OMn+2pZHpBTlUhEpTfNh
      wERGoqQP2NGSXE8M7PLufIu21EgUZ49N8oP8AOHjBQggDKguvctv/coJco5mt6FY3lWcGrb4
      QXiQDa2ndNjpws2BG6/ug5No4H0u8l7g8/2Vy/j9g+Q3byP9IYLb7zF86jwLsz9jusOIDobp
      fqhxkstaw0gT4ebjxNvBc9eLU2zsWQzmQmRHzF0TMTBQ6nHBBwdpuN/iveWQqZGjs10cOGqs
      cGnGXHbvGoaNOo5mJVEtsqYglog5nuIVN7nKpMtQEIe3M8YJER/3IKeqjiNh+yu3HnEHgOAn
      r91mJ9D0DfbxuaeGMYQIsLkXsdvUXDzp8sQpg6YNFQg0zeY6n7s0zXZVESkoFekdBUoiJe0g
      jDEr5vUE831UmejXnF28y2pDMllUXKuVWJs593jrVavOi/f/JV8ZWiQXm7/3NyMaoWa1FjFs
      LbLOycc54qEiHI/azAsAtIdPIISg//gLrMdN/9Ida5/yCSHAK2R/A7P+BnYuhx9pVq0yOgq4
      tzvFG69/n5Mnj/HSRYlnJYXxxFSBj4ZXTIxaLG0opoYzY70TE5P8TYfydoqBQMe3IjRSCRD7
      moPEdCxJFj07h/memTxxQ8ROf0XGZaFkIcxkgkVKEwS6A11qdMnUcMcOrj4YTNAmBR83MMlM
      slZg8/VXjvGn371G62SRH76zRDXwOD5Y4Pr6DgtLkq+8cpK7V+ZZ2mnTNzlBrR6ggogrV+fY
      agp+4YsnHhYvEywsLFKr1fcN4NGqhMAoxpdO7LDtR7y1LPh26xTCy5sbiyJ0q/7Q7+tGFfHR
      W3x91Ci/UvGPFrxwyuXl8zafUe9Au3mk63kcSR7ETqBpHN5fofd3gZ3r71J95wccF3Umrn2P
      J/buIgrHGb3467x+JWR1rUGz2aZWa8QFPKpLmbpEZ07i1q6m6ZvyUIOMNK2PgjCraMuej07/
      6zgUtm1seIXEVzLuQpP9JDH4zsmTKXXWEjebaCZqk5g6SSg3KVIBYs5Z0/EmirK8SVLeqpTh
      Nm00/K4ErFamksuyBEHbtN4KA83K0iZ/+v0btOw8tmNRztlcvrXM8dGI8bNTPDdZZGl9h6U9
      h7/30iRr1aa5WiGoFBxqDxb4cL76sAmgOX7sGKW4yP3+Rxv4Aqx2iysL3Yq7u7VH1Vdcu7Nx
      YOOuFC0mLvRxc3Od5vBx1PoCur3Lndd+bM6ysRDfaISqbpvfW1WWX/820dvf4ufaP8KxBPPz
      q3zz9bv8xXtLKJFFiC8N73F66Xv4Gw/w/d4wgWjvAVsbD59sn7oIEJbF+txd2o06G3N3KJy5
      xOLWDjU/RGGqmnI5lyAMCCPN+h4sr4fcW4xYWo+4vxyyuB5x7V7AW5fbfHAroNbQbDcAKbEs
      gW0bImLbShRJEIVxlZfOIkxGXQ2ZmIxLSxvaTjPku7t19vbqVKtmQoLA94OU1Fhrw1fq+2Hc
      SRISxTeSZMsOgWLHO4Rtd4Lrsg4+UhiCXENQHFCtNanVWtTrTYIgpNUMaTabNBo+QRAxPjnE
      L//ceeywydW3HzB0apLPni1zayFgfr7N9p5xStp+m0ajTRQayvfttU12dIGnT/WZiOd/+49/
      5bdltNP7GXZYPB+8Nc/QmRHyjT1+eNentrjCtbsb1CObIi0ayuJ3f/9dlOMy4ER87815AulS
      tkJ+/M4cK7t7/MOn2uy++w53dyJ2d3YojUxTvPZNtq++RXFnkeV3f8jKlQ+YWHqblde/wfH2
      Xb7wdIWyZ3HvwSpPP32KJ2fKzD/Y5g9/vMjy+hZLq7uU26ts7UFj9Bw7Nz5k6eZVPFfz4N03
      aAcWzTuvcuO9O/RPTLJ59TXW7sxRmZzkwZvfY2NhjcGZmU+s7/tlbHgQb+YcGgiLA1SOn2Xb
      6yeMNLn+YSbsBYJIYnkutuMQWTY/vd5CaclI2UIqTSUnQQlG+xyGim3qTU05p3jiWA6BRkVJ
      Q2+Z9kdIMstoTasVIKWFJS3CIIqDHKaG1rYtHKlwYvOn2Yz5PWNShFbLx7IsqtU6juOaNqtB
      mMKdLTsxV0yAozs3sd/I7V4WlZLsRjaOMO2xLMsoWtsPDaerlLTb7bQgKgwj8vlcWg+itaZR
      rfHeR5ucODnB2VMDXLu2zPjkAJfO9DEylGNuWXPmeJl+N+T63A6Bm+PJmT7GRissP1jHqZQ5
      NjN0tExwL6kH8NVXzvDd1+9QqijE7BhPXZzgS89P8c1vX+YzL57iL9+aY6Ns87OvnKH4zkeM
      9cOTx+CjH3+Ti2eOU3zjVc4VtojGx/jMiWUuR8v8+RvL/OxXn+SlXIWfe3qUb721xOTLxwha
      bb7zxh22fY+LozafeW6K9Y01vvjiLH/57n3+Xe87/P4dl7uv3+XMb/5nyKiOZUsWr7zFUy+e
      YWLsFHm1xmpYZnQyYuGD69S295h+4bmOfOOnIxqYswcgAvpOALAM0AQmLqCHTvL+Rw/wb8zR
      bAV89kmHWs0481NTHhUrplkkY7neaUXMjlioSNGom93MZJHjutfIFIZbliQMw7hDjsEZ+X6I
      7/tIKeJevjEwMDKhW2mZ6jsDR7CwbZswNCuyqaYLjNJbca/jA2jhg9nizteTSqzkKy0lKMoA
      oeO+EJHhKSoWczFNYmi4UeNmBh6G7TmXy0h+Lz03y9MaotCYVj/3+RPpWSdszdZIgb6ixc21
      KjsNeOnJIcYqhjni5c+ciE1KffQJMNAvWdv0aW7VGO7vR27WYqe4I4IQOytRu83VO+sMj1RQ
      zQbtMKLaaAOCi7Oab0XbPE3AvXYDe8Dj5GSJvfVNVnWBn3+qHycPe0C91sKKWZ+dnMvXnj7F
      neWAcXeHHVuyFQPMlFK4IuLfH/4pZ4dWmFz9Z/zxTxZ55ZVf5Ob2A4ZszX3fB8tib+Ej8tYM
      fTOTjJ+d5cEP/xz3F/4DCh97KXh8EW6OB+d/E8aWEWv3uLnyFkHg8vUnfSoyxJWZfV2LLGyt
      cFwXrRSOmxFhOQ4YmzwrFIoiQ1Dmuk5c5WUid47jpKhJO4a9Z513oFIpdF2j61qAS7sdxRHC
      fVDpntnoND3Y9Z7ZWXSKIs2ljS1E6lRrbUKqCI3j7gMfJdcTR520NrXNQhqSrv3RpcWNiIkR
      G0sKPvvZUyaAIQV7kU3JirBEZnp1mUCmEYQ4kClttnwmZ4b46OoCa4HL5y8M4bkWfWXT9GGw
      r0C+mGcsr3nv3h5feHaK+cUdRsf6uXR6gDffXaBvqI/p0TLtVpsTJ0exRZEzgzbl/jx9RY9C
      wWN5YR3yOWbGyjS297i7FfDKpXEcKVBByBvXVri22OD5cwMU8i59BYeBkqEGLOQdcnmH/pzm
      yQnFs0MNtm+9zqx1nyf7FHeXduk/9iyTFYG3Ms+xpy4xd+1d5MAsQ5Pjfz0gsw4RUiIKfejh
      WfaKs5xz53l+uoEtu5XHEqYlUN6VeJ7J0DuOhe0kORoLx7FwXQfXtXFdB89z8DwX17WxbIdc
      zsZ1bTzPwbadeAUndVZ7R1QFYajjopdeQY8s0pR83sj+moIssytkByt1j9zA/sSbVpLqnsFo
      KZ0U7xuTybC99YaglPKCjxZCRgaslEqn2WhiC2gHEbZtx5Es2Q2HbrZa2LYpQE+2UEtaBGFA
      Lpej0WhQKZc/Ruz24NgtbwaonRazA/Jo9oeGq0sh06MWpdzBLvLVOFoVhoYapVgs0mq1CMMI
      z/N4da6P9sxXWZ2fo17bY+zFL3GzMP3x7+HTlvkr/Kf932Csr4eyaYjieIpMk1IHk0J0NuIm
      gy5EUUfsnixhdJhEkSlFvHv3PrOzM7hebONrWN2qM9xf6MAKdZo9vXaF5Frighe7Mzwr0utN
      olxJi1uBpN1WrK6uMzU9mq7YEEeaEHRGt7qJwuCdm21Gh2xmx01TR4TEsS329mpI2zGcplod
      jAIF7YBWq0UUhdi2Q8s3zST8lk+UguEeN5O1TwRMDDnUbYf1mjJkRclhDzm8BhohVArWgVUr
      oUCEuJmGjpGU8Xu+7/OZqT3Wrr3G7u4Ow+NTpo/Bv0ERmNU9VZ2Zi/xB9YvMbzldxUhaw05T
      cn9d0IqsfcqfDVYUwZ0792MwW3yOOCRpWPDMJ49SFPfNH91ACsXo2AQbuy2U1oTtgIWVKu/d
      XGdjfQ8/EuzuNFnZbJGljHvphTBJKpWERWX60/UpkUyCbEK5rmRmZgwhFEnLXa1FWpxz2DmF
      gAvHHHZrSTtdm1bTRI88zzMuuzY9BbosX8/1CCNTpJHP59FKU8gXUshvTnldREqfSAScnvW4
      tyRY3FW0fYUKFTkbdKjoywvyjmCgKPBsA2LznI74Z4doDYVivguXEgYRds7YxI7tEgQhXz+x
      yp/aL9OcfoKW34bHK33+VGW0tYm8fxlv4hitkeMoYeGc+hlefb/B8fYOA3qBnGxxUz/Hqj3F
      yd1vc3ywRRga/JXoWnXNjjwxMR4n07qVwji3Jl9w1Axye2+X3//xCk+OWKy2Jlm/vcjk9ADt
      ULO8tIHb38faWpWVtSrV09OcGfd6HCWGK2hM0q0j/NlrqlhWslsl72e5kTQJlq6VmSL0goJ4
      blbZaFmCSqVAGCa+jaAZmp1wX5dIgSsP0wrRUVP7CXeAjvOdmva6DhdpkzH0A81ONWSjrmk0
      I9ptzWjxEDwJCQgrTVmDHTf8izOtti0ZrUR8bvcv+JN5h2D4BOLf4ARo13bJo6lffgNZuUXZ
      FqysrVP0HD6sepw9+zUuv/0mo+MR7ZVv88LLVep1g9Oq1RpIaaG1oq8vw84XCr1bIaVktw/R
      /c7sMRilOnNqjKfHNT+9X0dVylw8M8jqVhVQ6LDJ5Ts70GqRGwtgPKFvTI4HJCS5D6FhJz4b
      JJ07O6+o25FOnGmtsh3lMLHjMs5Olcgy3uY+//VrD+kRBrC9s4fruhQLGSoyaZ3zqUrH8Swh
      sDxBzoO+kpWOqUaztB6wtNNmcuBg9+qDaNL9W4XAtiRPDTW5oP81/3zpJZZO/r1P+UaOLo6X
      ozAyiXv6KYLNZazGLmPP/wzuygc0tldpzm1wtn+dk30rnDwTEUUa13XTeL/WUCxmkZsH2zbb
      DcFYsc1Yf/cDiuIoi3OI7Z8of6ShrQTj4wNI12W8XyFsxcCAjdzYpVFrUSgVGSwLXA0nz0xR
      alexKp4xc+KjmXyYJoqMsklTfnXoWGTltwKk2QXMkQSW1Olj7GT8iKKkxrv7OKboKbMEEm4j
      6NaGvK3xcn0PnwDlUvGAYn1iB/hxJZnBCKZGXK7djRjwFXmvs+Cl1/V0OkUJ6a1xntdrkrXB
      p/7qr/0hstM3yS4QKChNjaAwu5+t4O8P/x6zg50gv170I5korfmzvefJ+5t8pXD7wPsm+0sa
      Lj34fqy8WlCPHJ49P4klI04XFEFbMdnvMzM4jLRtnpgqxlEUxdkxBxgANH7M2yqEaVsUhgLb
      TgjPDpNuYF6CE5KWTidQFDNYo41pJKQ2GW6REDdk/mCtBR/cUXzugmRhXdFfstitKYoFiWPB
      /Lrm+JhZGpc3oSEGHj4B7F5dlYXp9r0fGJcEBNINdL+TytHtz0NFQKFgUW1F5DtMzkcd1oA4
      M+fqx7VThCenPtm1fEJpd/hRe53w2L5j/OHmL/Kb1T9huAxHYYFotWHHm0RsLjBxpntBSMit
      Ety9IVHuPQlsCQN2gCVM+6nEGS/k89Rqpg1tdlyVmhNCgN/ykdIinzf5BusRq36naJ1EdrIu
      N4h4IhD30NGCrE4hwrbsNH+QwMu/e7ufEXuPa3Mh79xRvHze4vaSotHWbOzB3dILvLx7mS1n
      kveWCohnv/74mWCBSUD0KoxOgjGdBeLpl3RSZvfJJsHGVsCJmU448UMutONDIg7b3dmQXJ74
      xU90DX/Vsjd0ge/eXeb47T/ks8/O8KhJkHehz19i1xtneWueyaGk95hKqU2Sx6UiY0L0wuhr
      NJYwBAhJD4cEjjDo9sehSEHLb8fRJQvXs2MEULz0iYhImRqB7qMn+qK7XosiDCYpFBRkhC00
      jXqAl3OxbBPxCSKNVgrXs1HaNA+HGDskHOa2HN5pX2Bh4DgPrv45QeQQ5Su8cXeXufwTiOnz
      6FEPhqb4fvRlsCzEjLm6x54ACX9+J9Y7vZ2uPw8mOZQ2ob+PK1qDiBRgpStb0r70wPbeY2bs
      teAH0fPoXOmvPfH1uKLO/Sxz8yVO7P2IsUdEbLcbku3CcQJXU86/0/VegIUONI7UOE5mG5su
      TdlCJWMnMZkw0jLOpqHhzBrNKaVxHRuZM9lh3dl0kKzRdpLtSsKdvRsBmq9WnBBfWdhCGUhH
      DOcAh0a9adxhpUEUaDVb8bUEvHnH4/ruFN4X/gFrwvhDO6NnIPTBdpnT2tR+0KGN+xq6fAz6
      gI+nOiIO9B4RSd1TVjZDJsqkxxAi47E30ODDoNqa1brD77R/hQfHvvbJTbG/BrkT2Nya+Az/
      b/0rVFuCBM25H95ca2q+vXqa9tAJvOY6npsdI4wEQQQ5J1N+yDLAUsS0JyKBKMcmhQARtyZy
      bJN1tSyTeTW1zIKlxTWiUKR+lYxhDCkk+gAuiPRvpQRRJNK6AoHEkwqESrFAKjKNr5OQr+M4
      KSOH1pqbS5Il/RSFgVGcDgpr4biIfBnheKnyP0w+BgLmMKfz0SJj1rmP60SvbLR5ZsI6EP4S
      AFYWTVDKbP0Jh5TSgv+n9UWqs5f+xq/8+2V77Dn+91XBv1f4DqOVCCGMExhE8MPFcd7zPkdr
      9jRCCFqj53ln8W1ePlYz5oxUFEibqXUdt3MHT+1obehv0kKYQwZLCEE+n9/3HASgQAv2+72d
      dQ5aJw5t9q3kPTBFNuVyDtPkIkuQSWEcddO/QjLkC4ITrxAU+mjrj/9UP8YE+PgnM5lJndqS
      jyNaa1Q7whKHX3IGjxBIrQljFOKPNqfZnnj6b53yAyAEO+PP8c+2x7g49yrn84vMNQe5Yj9L
      Y+YSiIyhQhT7eXfzWT6jXkWKrDb30EBZdorH2hWF0AwOloF9KS1BvOpk/mGm+saMCiONYZPJ
      JmUG6UiOY3a5ZCdJY/kk16kZKUdsLtyiffIzR77uXvL4E+ATapEUIuYeerxB39pTDBePfn4/
      FPyre7N8fXSOt+0XKL33R9Q++xuPCMv9zRU1MMXl/n/Ih34DRgqHjl3T7iMINa4T90sQh7M7
      f1LpLnzpiDbFuQDR8Xry70HfMcvr9g5paAQWCwurjI6OxM1A4KfbEwSTFz/xPTz+0BwSSz6y
      iKzk7min09y7u8J331xmrP/ol/tnGye4d/KX+Fftr5DfukPj2It/a5U/FSEQuSK2FEzP/5ST
      ts/wzb9kxlWUbMGAK7gQfIgUkjA07VYty0II05rKtDT6NEV3/GT/HH2RfLjyJyF1jaavry+t
      ma42NO+rJ9G5XmQCjyePtQMcnnR6PEmiCUeRe9fmuRsVKek6f3llnQvTedZXd/HKRdbX93jm
      qRla27u8f3+Pl5+bZWe7yoPFXV4d/Hn6KsNsV34GXd2C0sDfThOohwiguTJPKeey+P6bPOMJ
      KgPjNJfnGIxu0KhnTSoS59Fw82scpxdm52iSmFQ93zvwS4d5pE0NM8JMStMgsVPtOyEPOjZ7
      uneJUjmHwCS7/o+dr7I39cKn8jwfe0n89AIoD48IBaFmfiXgGz/dYtzy+OIz41Rru7x3c4Vj
      J8d5//oSL14c4Z0P17Bdh+Ojeb7z1jxvX18mGjrBxuJqds3lwb8VkZ/HkdLAIEs3LjN9+hyt
      RoOthfvoKGBmzMXz3BTtGASG3S8Mw5hy8ONLFOmUFKEXnE2jYzRnb0kScFFkHOH9odH9TQu1
      Bl9Jam2L++sW37w/xT/d/DrbY89/as/zsXaAJGX9aUjWnzi+kTiJtrIZsrLeRoQRU/2CZ0cl
      k2OSggyR2FiexVDRYXS4RM61sWXEmx+scPrUEJao4xbzVL1JLDf/6Vzo30CJNARnP0PpjAmn
      +FFEu17FLpaoLb3L5LDE9eyY6c9QPlpH4Rd8iOg4O5vs3jpJfSUOatyRx3Y6u8zHXxZZH2pp
      cliHGhIybWguCbXgxnqRvww/a8jGhvo/9YXM9BXvTHEfyFdkZs/jRgseJUl6fqemuL/oo4OI
      iYrg0oTEloaDf/jFY3zrJ7dRCD777DGW1kz12uhAASEkIwMF8iJgbnmPwf4C5ZyFL/e6SHP/
      rokGlnQc4046lZYKbAKzeoxzYjmGD5vQpON8QuXXOgtaCI20dAckPonsETPDpXmxLmtBxLmG
      JGTfa/PPdMuYST98MMFbg7+CLg3+lZmvtlI6gViYQRPsoyr8lE8dr/T1pub+ko/fDOnz4JkJ
      y4Q4953Ocj1++Ytn07/HSiNorbl0ehSAi6cGgcGu71xbqzNy7iz/tslUTtJY26MxpCkUMmX6
      JKI1KSCts91TZgns795JvFN0HycJUScTI3VwdQa7SKKnodJ8Y/lJrk7/EkJ+ssn7KLGT7N6n
      Lh3j0Q4V21XF5l5IO4SNnZBhV/HEpEV+7PEisQmR0v4dvRnA3LbFqhpgL3QRfgP+DptBvUQI
      WG8OcWOhznNn4dNZvMzqHkqLMBKUbdPcI3mv8+SG5Li3n9hZwJK+pjVBEJtFCCzL+BDz1QrX
      Rr7+V678kJpAGcbnsUVDECk2d0OqTag3I/xA4zoWSpvWNPm8RV/JYnYyF6fqBdeu7qWQ5seR
      JJnW6T9c3ynxJ/pL1MfPGM5P8fhN/v4uyEJTUTn5PDPF+fiVxyXOzRJY6Svxcp2Xav87aCWz
      7jFKo7QwoG0N7GuOZ0ymbBJobSgaLSmwbOK+AJIg1Pygfgn6Hg1j+DTErtbqiGbVgJIq5aNH
      eTT4geLWQhuNoFyyGBu2KBVMmM2MW0cKjwyEZVkCPId2oHAf0W2xlxjsj0nw1H34A/mLhONn
      /86EOT+J1PJDaeWXNvHGI0+CarVBPp/D99sUCh5RpGMyrAhlWzi2TRAZ0gGtoN02LXVt2xBv
      Oa5Nba9JvuBidzxXAw42eCGliBcwAJ0WwSeltt9YvcjS9Ct/bc/SFkLgui4PjUnukyjS3HzQ
      JtRwZjZHPne0lVx1YEDOnchx82aVp6Z7N5x7mAghUodro2kTVIb/f+WPJfJKXL0v+cIFReYh
      H210EkIty7LY3a0jhMDzTD11OwhpyxCtFa7r0mw20xxDGEa0Wi3stqFpSXhLpSRusmfIq3TM
      4Kx0whadRJMEO3XB9zfPcHPiF/5aE5Z2sVjAbser9hG+oDVcm/M5NZuj4B2R0iT9cuZg51xJ
      YNuESj+SpuPgNWhabbMLvOZfgGL/Y33/77TkCtQLE8AinVibo+wCuVwOz3MIAkUYNigWCzQa
      rbgUM8J1XYQwE8W01bVQyjDSOY6N7diEQUjBdQx8WWZAuyiKnWWhsSUorVJr482lQV61v0xr
      +vRfe7bePvr6YBTvo4U2MxMehSOu+oeKgNlpj3uLdc6MH80RbrY1v79+gQfOcZRXRmtFdOzM
      kfsR/9sgQkhuy/ME0UJcA3z07H0u58Q1tJJCIY9tCwqF3IEOLYZZoVs0tskV5E3GWan/r70z
      bY7rOvP775x7b+9YGvtGAuAirlppcWzLy2hseeKZsZ3YrqRSiVNJTVKVSqXyIh8gnyJVKc+b
      VJJKZjJx4qQcJ5Isy7LMyLJoLcOdIAlwBdDE1ui973JOXpx7uwESBEERIACyfyoVwG40cG/3
      ufec8zz/5/8IVGDqC4KoPJIVNRyAEBafzHbyi+w/hG2q0bADpZEbUWdqyC36xBMWnZmH786j
      tqmEqr7ALP5WKUG72mxu+LLx2Mrn7lWMaq15c36Mq/v/DkJaqOV5RHv3M7nZfRj59CjFCoSC
      zXWJggnGuMpEcaQw1isryylNCDPKB629XF7daCPSotOoQOCRDTwAABwJSURBVIsKBaWQ+IHg
      3Fw7byV/AJug6fm82LfnfMpLLipQJGKStpQklTBFEpWapjdrY1uCQGtmFgNePpx66A0lCBRL
      +WXa2syJaaXw/ADHcahVq6TDNqGWlHR2xZheqtLbBrVajUQigRSCcqVKMpkgHnMaRSBFkSES
      mwsntt4hPNukOphZTtHVtn7fBNMVkmYMnqajwlos54uUyiVGRga5P5UVva6p/4kGfHTBiFC6
      fXEuzfu1E9zt+4LpC72N2KODMezeJHVXm+6IVcXdQoBSmraUxcUbdZ4fTzA57TLYF9vQbFqt
      1dDa9NK1HRvXM0316m4dy7ao1YybWDXw6cxYXLzj0+4ESCHxXA/X87AsSaVaox4oUjHBnWXB
      rbZjjTu+2GZnt53KCGUq1z5i0rc4NmA0N54XNFpdrSSq5LIsgev6jbavEcYBpBnXb+9oI51J
      s2YeVxvh8spOj1LSKLAxDwp+NT3IB53fR/d27IjAReOM4zFBPGZa0A90N/PVMUdw+nKVseE4
      vZ0bW6tblkVPTw+lUgmBIJlImCiBZSMtGSZAPBwnhgoCsr1plqt5OtI2lbpmotjPTecFqjrB
      TMceOos3mW9/DrKDO+JN28moUh5ZL1OpehQLVWzbuPq5rh/qeFSYS4m609u47mr78oh7/71W
      ny+gYW0SfbUdsUonFLFYgt/Kr6BTHZt6zo+D7fn+gxVxwjRm680+uABjLZKJOEopUqlUo22m
      46Qbz2utiYdN+Wp1j2yH5J2zg5Sy+1mMDyOPvmxM6zFp+AX2tQb+I6CB5Yqg7nqNHmSmntZs
      cE3i0/TW9DzdkE7f6xX5MBODRnF9iHFtjja4978wYSts7eI+5vltJrZSmqpbR2tNKrl52Tfj
      DbN2dCa6A12bs/hl/kVmk/vRJ4bAjjXDYJtdu/GMoNp7iY0ewcqmybT9BidsZuG5pkagVqsh
      BMRiiWZxfNhjYSVaa2MGsU6ALYisDAWYBnesCmNqDctlhRSCK0tpPtIncAcPPfD3bQd2LOZQ
      q/hGOptM3KfHVlpjPWKk5eGFM4JTp6eY6v7HzO59JXykxWYwq2LQvR9lt7NU+YDBrNmJOjGJ
      VoJMJrlGtv9+owIhBJYd3uHlynSaQq1ShwIr6nZXcnq6jbfj3wOlUH2DOzJwIbUG27JJxOO4
      tRoTNwsoDROTC2bwP6AJQYRmdRI5sqtbf0Rrqm1fQO17eXPOosV9yI5ezhYGAZMIk1JQLlc2
      lPA3a3ndsCEXGiqBpORJPGWcuqWkIWJbGf70fE25pinVNB/pE+juPeje0R05+AFsMx2agxNC
      M3F5kp6Ez41Fn55Mng/Pz3H02B7KS0vM5Ioo6eBVqxx/aR+yXOSzq4u8enIfszdyLOSrdPR1
      cnwsi2Nb+NoY0q6k0bTBCrhRb933t5KPst/jYO7H7O0xkohCoUg6fa+dydo0TWaN8DApAnBC
      F9EVcmbziPn9C0WLn+S/TF5lEHcuUz/56o6f2SWYzUvUduaLR7v5j29e57UXe/ng01n+6LX9
      nDt/m+tzFU68tIdiucLJl/o4d+42H56d58uvDPDe/5vgZm6ZY4d6uHEth9Ym7r+8XDA+/EQb
      JsVyWfP2tW7OxB7PzmKrsQV02Pd/fHFh/gdINAbSxnVUTxKd6eLD0nNmyYLPyJ5eLHvtcsZV
      r2tkamnsEyxLmIYeq96S5u/SWvPzheeZG/kq3t6Xqf/B30VYT7Dx2ufENiZSGhlmabsGO9nf
      UyQdkxQWl3n3g0nSbWmqXp24Y5FwIJGII4Xg1vVZ3ncU/X0dlJaWSCYcLClDvYiH7RgXYc8P
      WCxqzs+383Hi61RHDm9mcfGW0GlLpBB02c2y7ZgM3ZxtQc4NcAR0xiTlQNNmSwKtybk7Z/cu
      hOBq9ivczl9jpNNt2JiI9WoSidS2D3yW1a5v5v2ZWRJcz36xsWfebHlK9Bc38u7eL+p+MLb5
      UYVSxpnXsmwOHcwCgm9/8zC/uzBHT1eKhJMkEY9z5LlhMuk0Rw8OcHy8g/PXl9k73A19adLp
      OEcP9WDbAiFtzs6kmar1M2uNkE+PoUcGnkiRw+MSl6Jxd9cC5jzF3riFj1n3+hpS0ihbUpak
      FAT4j2n7uGV09jF1u4c92enGQ1Ex+loCOSOJWPtXrd0Z0nC35CBGsptwwGvT40ikgKKvCdC4
      KiwtFubziMyoY0KQtAQLG7SAEXOX/kLHgiljoiQFUqw9QFe2m2noR9BoHYRpb81ySXF+PsOi
      7mJWjpDrPWkKVHYZUau56B6mgJgwxejRxKXC0s6YALepJNiR0Vtr8Rb/iP/AUHdz8AqsB14A
      kQ7r3km6YV0e/oaVTExL/mv3v0bEPr/tynqMxC2kgDk3oNuxqChNXAiqSpP3FX0xGdXlkPcV
      3gZvRrbpthHGfQEhH9BEQZiQaFTZo3XkIa+YztU4M9PHmcHv4A0N7/qKLHXPVzCDHLjvBljX
      az68owiyI/y3G6/zL7PvbqhJ3vpEC4zVoe79/Zrk9AVqI1sT2RMCXKVxwnFVDhTpmMVyuOSU
      QM0YV2x48APIqIug7YAlNX4QhNaF4QAnaGx0rLAo2sSAJYTT5a+ujlDo/UN0916EtHb14H8Q
      prXaLkUIisNf4OKdlZvSUJqsVi/dItWmUnqV27ZSmPXgKppLIiHAU1snS79VC5h1FYVAc7se
      oDUses0yzVlXkfcVS/6jzcHhJlgRmZAKaSIGnt+UMgsRaUAEdU9TrCiSMUGlLji1fIQ7J/8M
      LW2CnXwbfAxsAd2OpBRo3EZfAohJMwXvCuwY1/y9HGcyfMDYrRcKFQAymXSoEzLiOcdxqNdd
      EokYnueitcZxHCzbdN4MAtUIcVs2eD54Tubz+O1/LlwN7iYMODvyazGDHYz3Z2hPJ2WYJget
      NJfmkrxd+zKlRD92sUSQ7EQN9ICwdvYa4DEJwjI+Rwi64xJPQU1pOmzB9doDdow7DCEE1zKv
      UqxM0pakMZ1F4rhSqYxxZjBRvGo1QAiJ7wfU6x5CCoJAkUwmqVbq2I5F3TfnnrJjxBwYcK9z
      l/2bf+xA1haUA91Ycq5HtC/bCLbSGokKnbxkYxMskAghqbma6SXBRKmH09nvoLNmp+99zpPZ
      jUQRoUBragpKviZjCSq7bMqrtO/l6lyal4fLjTJJ27GRQmBZNmAaCYJZAlUqVSwriW1bSGkh
      BNRqphY4FrepVWtEE6CrBO16kbtbcNzpsClH1hEUA42FWeenLUHeV2RtMzvHpcBVmowtuLvB
      cLQtZdS5W5NbhKlCirJvI6SDknEuymMUMmMwvPm2dLuFqtKNpU4xHPSV3bL0WYkTJ+d3IUSF
      qONMpi3GWp3bfV+RTidJJBzACQ2yFPHwQgBNMnQA0Rqk0uwVM1zxPYS9uQ2YE1IQaPCBrC2p
      Kk0MMyt3OZJAR6FrM0s/ymrEju70E3MJfsr38ft6wXZWqfqezWH/9CGE4I4eQuvbjcDGyu6Z
      K7FtiW1b4X7AauwDTc2w+RkVAKEznGNDX6oObu2+PlyPS01pYsLc7VNS4GqNRJhQtYKBuMWt
      mo8lJEVfrcjQPxy7UoWfXzvAVO/XUZnu1mB/ysnHB6l5kHCi4vQHCxd9XzE1dYPx8TFsO7I4
      iVqvilAQFyYM0dyutEHP5tf3loJmtKnQWHaar3EBM/UAT9NIfm10czxQX8D+P7nDXB0+uKGG
      YgApy6RPakpvetRHlhdpy18lnxknWc1RzYxAuuOZXXptBbWOUW4sxDnYVw8jfpFbQ/M9jmYH
      2xbs2zceGtuakKMQ0QxgXtPIDmu4pUee+GdVv1eO/Aj4izlsNXwE4W5MtCQFdFw+hXRrpA8c
      p6ht4h1duMVl4ukMbrWClUih3BpYNioIyMn0hi+U7Oxp/smBz1gsvku6G96bSHFm9EeQ2boU
      +zNHqp2P5w5xQJ9BBwLLXks5E+mfzNdI1rPyp5ruz+ZRL4AZe89WHvnmoz9Hj7BKYZm49qlf
      PI3T3k3xw6sku3oYHN/PR7/+JcMje+js6iG/XMB1Xbq/9F3u1u/fkftT57B6hhBtXWilwKsz
      P/4GP57uIeYWKNrd1A8c3JVSip3OZPtJFspn6MlESTCBsQhfre3X2vj6GM1N85n7brgaTk33
      UR8+vquW0HJg7NHzFolUmlRHFm05eJUyQ+MHqBRLTF+/Rlf/IEPj+5mbncF2HFMPPDcJ5fx9
      /XutwXFYWSThuwgpKQ6eYGH0ddzhFxDxZGv5swWI7ADvLR5GaVBhtleHHiZNF+cw+29FA351
      1jfaPGsluLsEH6a/vSuEjiu5K1OIf3d+Xk9ucAkE0G6ZpZCPwFI+wrLRgQ/SQmiFEJJAm7tJ
      ++3f8oPe3zBftvlotoeJgz9qubjtEHTg88LMT/mz4UuhFN48bknTn1eZdo8rKr9WvFZHHj9G
      Qv/bG2l+OfIvNj38+SR45CVQoZH41IAFSpO0LAIF9bqHXp5DVgsc4Tx/NHiTtjSkEh6nin07
      vgbgWUJYNmc7v8nxxUnGu2ogrFDvo0Fr4zAt9H21A42ZPJwopBTkZZfRQ+xCNnzUOgjMUlFa
      RheydItseQpXJBlYzmE7Hnu75hjNLJIdEFhSNtwCFouKG4mjreXMDkOnO3lz+Wv8M/ULLBmY
      wa5B6wAhTHFT1LUxULphdxhZXkY5gD6xCIG/6fH/J8HDLwCtSc5f5lX/FK52yPmdZGWBV3um
      6Rkw8uj8skcm5ZBI2CgtjS89psExCDpTguTcXaqMbvkJtTBIIGmZ5Yyv9ZoSYSEEix1HuLP0
      HmM9PkoIFhcKZLPtLOdLpNOpUAsWUKvVSaVMQEKj0UqjlI9t27STB9/dnRdAb8JiUZtUs7pz
      HoI6BdGJ7B+Fcp4D+d/wrf4JutvMScPsCqs78222PY5lW82BHxbLCN30ANqtU+RuxRJGK2P0
      SgLvAbFykenk/MII4703EMK4+lWrdWzbabRYtW0Ly5LU60YBppQRxdXrLq7rg5YPLiPb4did
      izfJ/P49jo/6jKRu0dWZwg/g0t0kA+k6Q/vD9pgIo/Vf4TlP+J0SkTNwOIVGjRnCC8W2wXZL
      6HCT3GLr8bQpH9yIXPuiPM4f+zewLUFbWwrPC7Asief5xGIxlArCmxqgNfF4LBRPChzHJhaX
      oPwtP6etwO6oX+CNg5O0Zyxjj40mlbA4MVqnUfyiBfe22mmm0JulyuZub2HKRwxaa35zNUl+
      voiVnISBA0/y/J5pOmxJO5qSrymvcyHU+o8wkXubo8MetgNCOgihcWIOZkaPrbF/01ixBFcW
      02i3AsldOgOM95RQ1TiWNA4ORg6rWVkRq0O94IN58HOuD7+Xr2K9+uomHnaLjVBTRhj2oOVP
      AyfOOXc/x7iEQoMIQs2PCpdFksAHy46qpQEEP505xrWhb0OtCOndma2XxhhLYjvgOCClMroP
      HWCufvlYy5ZAgWtvXwOEZ5mCbwZ+m73+5yeE4GriJeaXRegD1HgGKS20lkxN3aRe84gMShaL
      gtuZ543jW6YLaiV0Ob+Vp7Ml2KaNvWis8aOeTkobS7xqtQ5AOp1qhMQgNE+SItwY32OPGJVS
      AvNFgZvq21Up8qeJSqAJeLhXjsr0EH7UzfJYIRu26fv2jTdEcF6g+Un+NdzhcbTWBNcv0Hnh
      f5PtsJk+9vcIsiNbfl6bRRiaWTE8hfGEtCzR2NhrDbWaS6VSwbZtbMvCD4Kwt7CpEXVs2yTL
      tcb3fRKJOKlkgqpvQWJn+kI+7USLlXRYUFJbb0McT3K3kGEPxfAGZtxCogvAspqvLVVhKTaA
      9j2QAplMUTzxQ567+z8YvPmfOFv/LpX+3ZH3aej8jAOECWNGj0gJvh/geR6uWzdxHiFIJOJE
      npECEzqr1+v4vk8s5jSiPVrDO6VXEMkNNKtqsWXMe4o1XB5XIZw45/znCKX+Df1PM+kFdU9z
      /rbgrbnDeKUSenoCYTmIzj6E7/LVgzXeeCnge/xPmL+9xWe1OdgrRU4ROor+IOlob2vUjzbf
      EGjLZBqF0gKBzJgGGEIQNr8QfDzTxnzvK63lzzZSDjR9MSt0s1h/M3yr/WUmc5+xf8DHFMg3
      P7lSTfOfF15nsf8EvuWAaBZRiunLvOB+RGYE0JrxPhi/8C5T3U3tV0KChaasdtZokLdyPgv5
      YJVas+ENo7Xp7qhXKgCbP6MC4ykqZVQlpBuucaWq4m31DUQivcafbfGkUBhbl9RGejF3DvCu
      92U8X6y68wNcnwkYyg5xOD/BcEyzx/YYpMJeUWXguRcZTFbDNkmmu+QPD91hbOZ9RmyP3voS
      I94S2dwEvW6erLVz/PPs/i6L3B3F9RmfmC3YM2DT2RZd2xpQqECEgdDmBrju+tRrdTo6TIRH
      St24aISAswtZvK6R1t1/m9FAzg3osCVpy1iLrEdu6Kv87PYc3xm6hBQmLC6EYGZJ8/vf/3de
      +/4/QCxMoZbnuTZxmaGREToH99KmF6nVJIFfD8Onkuyt9/A9SS43h5dOk8n24p+9BO09cPC1
      J/MGPAQ75gjGhx3GAdfT3Jr1uXbLw3EEB/bYJOOYNWHDLVMSKB22PvWaJXHhDCGVoFyDU7yG
      sFub351AQgpiUpCxBLZQLPsPvgiElFwc+i76juBPBi/g1QWn5weY7H6BF/akmLv4GUulCn29
      PXQfPEbF91j44Gd87UuSRDxGVdXQ2mSIv3rE5+eXJtB0IbWmXi7gBwr5YOvpJ84qgU7MEezf
      YwRNnqe5etujWtd4K7LcdRdeOpSgI2MTT7ahWZkCF5RcyV/d/RK1gZ3VC+pZphRofB0Qk8ZC
      ZGU6a03sGBf3fp9LuRexpMAfGSfjWNQkJIafx9GaRSHwlAmXO7PnaWuvIgWk08nQK8j0gxjt
      q3Fu359SjiXxtfH0cTWPZuC5hTxQoeY4giPjq+/gxbLiZi6gLQ0muhzJx0UjXHZ+JsHs4Jdb
      2v8dhIZGkUtTuLI+QggYONDIIeRuTpC7do3MyCH6940DGh14FBfnOTo8jFe4zKLVxkDKDuXU
      kEzFOZhd4v2/+TXBC9+ieOU8um+M9o6dsy/csESzXFVMTfsc3Rcz9hiRIFSH1hgaXA8+US+3
      Bv8OJMCYSJUDTSl4WI+Y+7l97lOee+OH+LUqhVvnWJ7OkRl/EVWrUpFtVJYKTHg2pKuoAD69
      ssT4gQFi9SLxs3/F+UKMbEcaHShmzn5M9/gotz/5PVamj9FXXtmKU94QG9I4VGuKa3d8nj8Y
      M53DZbOxsiUlUkiktPjdnSyLgzu79dGziq+Nf44UptPNozJ06DCXf/FT5m/NULx1Dqv3KB2d
      CYrzdynrJJ5vOgd1d2dpy8RwLMXpT6aZXarz5z8Yp2P6DAEuV//vf8HpGcOOJYkl48ycOc12
      6kgf+lZUa4rJaZ/nD8Qagz4KiYroH8B8AT6IfxPd0v3vWNKhp1P6keuyFXb7EIff+NssT32K
      lewgOzzYeLYqM7g+IBS2I/nVxzO89oU9dGUkVlhDnpQeEGPk5S+wdGuKuXPvkxo7QVd/37b6
      Kq87Wuuu5vpswJHxWDjO11raaJTSvDN/FHdorBX23AFo3zMu3/e0Jl3yNRL9ObrYCOpLd5g5
      /wmDr7yOQxHHAiHiZIdHQfrooJ07l65Tm2/nxX1ZfnfuLgfGO8lmHLQCNfYyqcE9pDNdJKav
      EO86Qe78aTJ79rOdXhJiYeLH2vam7nsiCDQTN30OjTmNHgGrL4Dm97m84C9qP0JkB7b+iFs8
      lMjiZC0Vb/SpdTkSV+mG2e9j/b3A55t3/i0nR0oIocKEWNh8W0jOTaf4X13/HJFIPfbf2mzW
      nAt9X3Pphs+hcRMS1coIo6LwbZQUi/47v5CFzv4ndtAt1qdRhroGcQnttml5am9SsEJYNh9X
      DoWJUFMZKISNUpILuTRvJb+/Iwc/3LME0kDgay7d8Dg05oTWGOFzuil5bmqDDBeCw7tC+dfC
      9NGKS3AVVILNS0jlB19havEs+3pcqh78zd0OLosjzHSdQKc6N+3vbDarLwClOT/pcXjcwblH
      PqiVoHlTaS6HLs/YLPW91Fr77yKKvmZPQtJhW9yqBZvS2VK39/HXlX9K6vZVgkQH1aH9u6NR
      dvRNoDRnr7gc3R/DcdYYzvfsATSaugtv1r8G2Z2T2HiWabeMoVUkZV4OJGlpNr6WABvNfGCh
      gHnXmB1YAjZQN/9QhBDodBfl9Enz78f/lU8EG8yG99ykx6GxGLG1Bj+RQrQph9Ya3p3Zy3Lf
      i63lzw4hduMsiXoZbAcbRSrdRVsqSaVUhPxd0s+9xDztALhaMxyzUVpzqx48zS3e1sXWCi5O
      eRzcaxNzQo/I0PBh5bgWjTuFmQku5pJ80va3dsU096zgui7pegldB8eS1OZnqUjQwqZWq+Be
      OdtQYXoaln1FTT16Vvhpwp6a9tm/xyaVkI1NrlJwbxBBN+opBIWK5Ofet9DZnbu5eRZJt7XT
      0ZnG8zz8/DxOKkUmmUQn22BulvaRsVVN7B61p+7TiNw3YgY/3H/Hv5coGfbO9Cj1vpba88lT
      Z+rUr02cX7lMnnqHYEUcf6n/OU7ddbk59CKzx77BFdnLjX0nOWMPUXjpj5lMD2/jse9M7gsW
      ixVhz1WPA2jJlbspLmW/sfVH1mIN6iyf+ZTFfJ1q7hrTV84R+C63P/wFkx99QNnXLCwsUqgs
      c/2Dt5n+7fs4UlGq1Jm8eIG60sxPXaI2f5Or77/JUm6ewvVzXPv1WxTzpe0+uW1hzWyJKXG8
      50EhmV6O8VO+h8p0P4FDa7EWnUdOULj0CYu3Z+geHQFhEW9rI3/hEwrLZQDmzpzm5KFDfPaz
      f89w+RbLMzkqM5PUKnkKd/Pc+uxTRr/4h8xfOs3C1UukRw6SyiS3+cy2h3VVUc1ZQJBbtvnL
      2ndwO3ZZH6inDZlEqgKuihF3JO7sZxSDfvYcfd60msJY2ecyQ/z9f/VvuJM0Gfrh5w9w5a23
      6Rg/Tn1pmuu/fQ8r3cPIV/6EuFrg+mefbudZbRtrhnCUCqM+ymj9CxXJXxffoN67/0kfX4tV
      xOkYHSLutFORWSy3i0TfXsSNU1TtDL3JOGLPGG3dHZz54JeIeD97PYfOoQGszgHaB2fI9mVI
      v/6n3LlwgVS2m/LMNRZn8/Q//6XtPrltwYjhfCOG0zrSPhhjJK0l5armL+e+Rq7/i61ClxZP
      HdL3Na6rCAJBYbmCWw/QSuC5iny+xltX9tLef4RRWSErvO0+3hYtNhXpuT6lYoVKuYa0BJ7v
      Ua3VKVd83rvST0H3E1z4HbHcFIn6sxkpaPH0IpVWOI6DlBKtwLZttLZ579oI9uAX6RgcIZZp
      pzB9E7kLW+C0aLEedjodx3LiIIyzQ7kGP1k4yezxrxt/T0BkgTE23PG9RYvdgk3Y2sj34bOZ
      DO/zdePsa9ywWuxiWi2pHo4Ngt99NseF2T6WX/9zqjK+a6SsLdZHV4qIdMd2H8aOxn5ndh+V
      sT+g91g7s8S3+3habCYPa43UAnux+0Um3Zak+WlEZlpq3YfRWiC2eKZpXQAtnmlaF0CLZ5rW
      BdDimaZ1ATylaK3Rnrvdh7HjsQccBdvqz9tiy4gBovXZrsf/B3SvWaWNXSfPAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
